GAS LISTING /tmp/cc7luO5z.s 			page 1


   1              		.file	"tcb.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3TCB11thread_exitEv
   9              	_ZN3TCB11thread_exitEv:
  10              	.LFB46:
  11              		.file 1 "src/tcb.cpp"
   1:src/tcb.cpp   **** //
   2:src/tcb.cpp   **** // Created by marko on 20.4.22..
   3:src/tcb.cpp   **** //
   4:src/tcb.cpp   **** 
   5:src/tcb.cpp   **** #include "../h/tcb.hpp"
   6:src/tcb.cpp   **** #include "../h/riscv.hpp"
   7:src/tcb.cpp   **** #include "../h/MemoryAllocator.hpp"
   8:src/tcb.cpp   **** 
   9:src/tcb.cpp   **** TCB *TCB::running = nullptr;
  10:src/tcb.cpp   **** int TCB::cnt = 1;
  11:src/tcb.cpp   **** 
  12:src/tcb.cpp   **** uint64 TCB::timeSliceCounter = 0;
  13:src/tcb.cpp   **** 
  14:src/tcb.cpp   **** TCB *TCB::createThread(Body body, void* arg, void* stackSpace)
  15:src/tcb.cpp   **** {
  16:src/tcb.cpp   ****     return new TCB(body, arg, stackSpace, TIME_SLICE);
  17:src/tcb.cpp   **** }
  18:src/tcb.cpp   **** int TCB::threadCreate(TCB** handle, void (*body)(void *), void *arg, void *stackSpace) {
  19:src/tcb.cpp   ****     *handle =  createThread(body, arg, stackSpace);
  20:src/tcb.cpp   ****     return 0;
  21:src/tcb.cpp   **** }
  22:src/tcb.cpp   **** int TCB::thread_exit() {
  12              		.loc 1 22 24
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  23:src/tcb.cpp   ****     if(running->isFinished()) return -1;
  20              		.loc 1 23 5
  21              		.loc 1 23 27 is_stmt 0
  22 000c 97070000 		ld	a5,.LANCHOR0
  22      83B70700 
  23              	.LVL0:
  24              	.LBB12:
  25              	.LBB13:
  26              		.file 2 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/cc7luO5z.s 			page 2


   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "syscall_c.hpp"
  11:src/../h/tcb.hpp **** #include "../test/printing.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** enum threadNames
  14:src/../h/tcb.hpp **** {
  15:src/../h/tcb.hpp ****     mainThread = 1,
  16:src/../h/tcb.hpp ****     consoleThread = 4,
  17:src/../h/tcb.hpp ****     idleThread = 2,
  18:src/../h/tcb.hpp ****     userMainThread = 3
  19:src/../h/tcb.hpp **** };
  20:src/../h/tcb.hpp **** // Thread Control Block
  21:src/../h/tcb.hpp **** class TCB
  22:src/../h/tcb.hpp **** {
  23:src/../h/tcb.hpp **** public:
  24:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  27              		.loc 2 26 31 is_stmt 1
  28              		.loc 2 26 38 is_stmt 0
  29 0014 03C70703 		lbu	a4,48(a5)
  30              	.LVL1:
  31              	.LBE13:
  32              	.LBE12:
  33              		.loc 1 23 5
  34 0018 631E0700 		bnez	a4,.L3
  24:src/tcb.cpp   ****     else {
  25:src/tcb.cpp   ****         running->setFinished(true);
  35              		.loc 1 25 9 is_stmt 1
  36              	.LVL2:
  37              	.LBB14:
  38              	.LBB15:
  27:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  39              		.loc 2 27 36
  40              		.loc 2 27 45 is_stmt 0
  41 001c 13071000 		li	a4,1
  42 0020 2388E702 		sb	a4,48(a5)
  43              	.LVL3:
  44              	.LBE15:
  45              	.LBE14:
  26:src/tcb.cpp   ****         return 0;
  46              		.loc 1 26 9 is_stmt 1
  47              		.loc 1 26 16 is_stmt 0
  48 0024 13050000 		li	a0,0
  49              	.L2:
  27:src/tcb.cpp   ****     }
  28:src/tcb.cpp   **** }
  50              		.loc 1 28 1
  51 0028 03348100 		ld	s0,8(sp)
  52              		.cfi_remember_state
  53              		.cfi_restore 8
  54              		.cfi_def_cfa 2, 16
  55 002c 13010101 		addi	sp,sp,16
  56              		.cfi_def_cfa_offset 0
  57 0030 67800000 		jr	ra
  58              	.L3:
  59              		.cfi_restore_state
GAS LISTING /tmp/cc7luO5z.s 			page 3


  23:src/tcb.cpp   ****     else {
  60              		.loc 1 23 39
  61 0034 1305F0FF 		li	a0,-1
  62 0038 6FF01FFF 		j	.L2
  63              		.cfi_endproc
  64              	.LFE46:
  66              		.align	2
  67              		.globl	_ZN3TCB5yieldEv
  69              	_ZN3TCB5yieldEv:
  70              	.LFB47:
  29:src/tcb.cpp   **** 
  30:src/tcb.cpp   **** void TCB::yield()
  31:src/tcb.cpp   **** {
  71              		.loc 1 31 1 is_stmt 1
  72              		.cfi_startproc
  73 003c 130101FF 		addi	sp,sp,-16
  74              		.cfi_def_cfa_offset 16
  75 0040 23348100 		sd	s0,8(sp)
  76              		.cfi_offset 8, -8
  77 0044 13040101 		addi	s0,sp,16
  78              		.cfi_def_cfa 8, 0
  32:src/tcb.cpp   ****     __asm__ volatile ("ecall");
  79              		.loc 1 32 5
  80              		.loc 1 32 31 is_stmt 0
  81              	#APP
  82              	# 32 "src/tcb.cpp" 1
  33              	}
  83              		ecall
  84              	# 0 "" 2
  85              		.loc 1 33 1
  86              	#NO_APP
  87 004c 03348100 		ld	s0,8(sp)
  88              		.cfi_restore 8
  89              		.cfi_def_cfa 2, 16
  90 0050 13010101 		addi	sp,sp,16
  91              		.cfi_def_cfa_offset 0
  92 0054 67800000 		jr	ra
  93              		.cfi_endproc
  94              	.LFE47:
  96              		.align	2
  97              		.globl	_ZN3TCB13threadWrapperEv
  99              	_ZN3TCB13threadWrapperEv:
 100              	.LFB49:
  34:src/tcb.cpp   **** 
  35:src/tcb.cpp   **** void TCB::dispatch()
  36:src/tcb.cpp   **** {
  37:src/tcb.cpp   ****     TCB *old = running;
  38:src/tcb.cpp   ****     if (!old->isFinished() && !old->blocked) {
  39:src/tcb.cpp   ****         Scheduler::put(old);
  40:src/tcb.cpp   ****     }
  41:src/tcb.cpp   ****     running = Scheduler::get();
  42:src/tcb.cpp   ****     Riscv::pushRegisters();
  43:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
  44:src/tcb.cpp   ****     Riscv::popRegisters();
  45:src/tcb.cpp   **** }
  46:src/tcb.cpp   **** 
  47:src/tcb.cpp   **** void TCB::threadWrapper()
GAS LISTING /tmp/cc7luO5z.s 			page 4


  48:src/tcb.cpp   **** {
 101              		.loc 1 48 1 is_stmt 1
 102              		.cfi_startproc
 103 0058 130101FE 		addi	sp,sp,-32
 104              		.cfi_def_cfa_offset 32
 105 005c 233C1100 		sd	ra,24(sp)
 106 0060 23388100 		sd	s0,16(sp)
 107 0064 23349100 		sd	s1,8(sp)
 108              		.cfi_offset 1, -8
 109              		.cfi_offset 8, -16
 110              		.cfi_offset 9, -24
 111 0068 13040102 		addi	s0,sp,32
 112              		.cfi_def_cfa 8, 0
  49:src/tcb.cpp   ****     if(!running->sys)
 113              		.loc 1 49 5
 114              		.loc 1 49 18 is_stmt 0
 115 006c 97070000 		ld	a5,.LANCHOR0
 115      83B70700 
 116 0074 83C72703 		lbu	a5,50(a5)
 117              		.loc 1 49 5
 118 0078 63960700 		bnez	a5,.L8
  50:src/tcb.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);  //switching to user mode
 119              		.loc 1 50 9 is_stmt 1
 120              	.LVL4:
 121              	.LBB16:
 122              	.LBB17:
 123              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     static void popA0();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  17:src/../h/riscv.hpp ****     static void popSppSpie();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // read register scause
  20:src/../h/riscv.hpp ****     static uint64 r_scause();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // write register scause
  23:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register sepc
  26:src/../h/riscv.hpp ****     static uint64 r_sepc();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register sepc
  29:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  30:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc7luO5z.s 			page 5


  31:src/../h/riscv.hpp ****     // read register stvec
  32:src/../h/riscv.hpp ****     static uint64 r_stvec();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register stvec
  35:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // read register stval
  38:src/../h/riscv.hpp ****     static uint64 r_stval();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // write register stval
  41:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     enum BitMaskSip
  44:src/../h/riscv.hpp ****     {
  45:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  46:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  47:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  48:src/../h/riscv.hpp ****     };
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // mask set register sip
  51:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // mask clear register sip
  54:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // read register sip
  57:src/../h/riscv.hpp ****     static uint64 r_sip();
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     // write register sip
  60:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     enum BitMaskSstatus
  63:src/../h/riscv.hpp ****     {
  64:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  65:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  66:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  67:src/../h/riscv.hpp ****     };
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // mask set register sstatus
  70:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // mask clear register sstatus
  73:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // read register sstatus
  76:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // write register sstatus
  79:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // supervisor trap
  82:src/../h/riscv.hpp ****     static void supervisorTrap();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     static void pushRegisters();
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     static void popRegisters();
  87:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc7luO5z.s 			page 6


  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** // read register ao
  90:src/../h/riscv.hpp ****     static uint64 r_a0();
  91:src/../h/riscv.hpp **** // read register a1
  92:src/../h/riscv.hpp ****     static uint64 r_a1();
  93:src/../h/riscv.hpp **** // read register a2
  94:src/../h/riscv.hpp ****     static uint64 r_a2();
  95:src/../h/riscv.hpp **** // read register a3
  96:src/../h/riscv.hpp ****     static uint64 r_a3();
  97:src/../h/riscv.hpp **** // read register a4
  98:src/../h/riscv.hpp ****     static uint64 r_a4();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp **** 
 101:src/../h/riscv.hpp ****     //system id codes enum
 102:src/../h/riscv.hpp ****     enum sysId{
 103:src/../h/riscv.hpp ****         memAlloc = 0x01,
 104:src/../h/riscv.hpp ****         memFree = 0x02,
 105:src/../h/riscv.hpp ****         threadCreate = 0x11,
 106:src/../h/riscv.hpp ****         threadExit = 0x12,
 107:src/../h/riscv.hpp ****         threadDispatch = 0x13,
 108:src/../h/riscv.hpp ****         semOpen = 0x21,
 109:src/../h/riscv.hpp ****         semClose = 0x22,
 110:src/../h/riscv.hpp ****         semWait = 0x23,
 111:src/../h/riscv.hpp ****         semSignal = 0x24,
 112:src/../h/riscv.hpp ****         semTrywait = 0x26,
 113:src/../h/riscv.hpp ****         //------------------ za 20p
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****         semTimedwait = 0x25,
 116:src/../h/riscv.hpp ****         timeSleat = 0x31,
 117:src/../h/riscv.hpp ****         getC = 0x41,
 118:src/../h/riscv.hpp ****         putC = 0x42
 119:src/../h/riscv.hpp ****     };
 120:src/../h/riscv.hpp ****     static void sysCallWraper(...);
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** private:
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     // supervisor trap handler
 125:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** };
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     uint64 volatile scause;
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 135:src/../h/riscv.hpp ****     return scause;
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** 
 138:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 139:src/../h/riscv.hpp **** {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 144:src/../h/riscv.hpp **** {
GAS LISTING /tmp/cc7luO5z.s 			page 7


 145:src/../h/riscv.hpp ****     uint64 volatile sepc;
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 147:src/../h/riscv.hpp ****     return sepc;
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     uint64 volatile stvec;
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 159:src/../h/riscv.hpp ****     return stvec;
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 165:src/../h/riscv.hpp **** }
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     uint64 volatile stval;
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 171:src/../h/riscv.hpp ****     return stval;
 172:src/../h/riscv.hpp **** }
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 175:src/../h/riscv.hpp **** {
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 177:src/../h/riscv.hpp **** }
 178:src/../h/riscv.hpp **** 
 179:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 180:src/../h/riscv.hpp **** {
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 182:src/../h/riscv.hpp **** }
 183:src/../h/riscv.hpp **** 
 184:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 185:src/../h/riscv.hpp **** {
 186:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 187:src/../h/riscv.hpp **** }
 188:src/../h/riscv.hpp **** 
 189:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 190:src/../h/riscv.hpp **** {
 191:src/../h/riscv.hpp ****     uint64 volatile sip;
 192:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 193:src/../h/riscv.hpp ****     return sip;
 194:src/../h/riscv.hpp **** }
 195:src/../h/riscv.hpp **** 
 196:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 197:src/../h/riscv.hpp **** {
 198:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 199:src/../h/riscv.hpp **** }
 200:src/../h/riscv.hpp **** 
 201:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
GAS LISTING /tmp/cc7luO5z.s 			page 8


 202:src/../h/riscv.hpp **** {
 203:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 204:src/../h/riscv.hpp **** }
 205:src/../h/riscv.hpp **** 
 206:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 207:src/../h/riscv.hpp **** {
 208:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 124              		.loc 3 208 5
 125              		.loc 3 208 68 is_stmt 0
 126 007c 93070010 		li	a5,256
 127              	#APP
 128              	# 208 "src/../h/riscv.hpp" 1
 209              	}
 129              		csrc sstatus, a5
 130              	# 0 "" 2
 131              	.LVL5:
 132              	#NO_APP
 133              	.L8:
 134              	.LBE17:
 135              	.LBE16:
  51:src/tcb.cpp   ****     Riscv::popSppSpie();
 136              		.loc 1 51 5 is_stmt 1
 137              		.loc 1 51 22 is_stmt 0
 138 0084 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
 138      E7800000 
 139              	.LVL6:
  52:src/tcb.cpp   ****     running->body(running->arg);
 140              		.loc 1 52 5 is_stmt 1
 141              		.loc 1 52 14 is_stmt 0
 142 008c 97040000 		lla	s1,.LANCHOR0
 142      93840400 
 143 0094 83B70400 		ld	a5,0(s1)
 144 0098 03B70700 		ld	a4,0(a5)
 145              		.loc 1 52 18
 146 009c 03B58700 		ld	a0,8(a5)
 147 00a0 E7000700 		jalr	a4
 148              	.LVL7:
  53:src/tcb.cpp   ****     running->setFinished(true);
 149              		.loc 1 53 5 is_stmt 1
 150              		.loc 1 53 25 is_stmt 0
 151 00a4 83B70400 		ld	a5,0(s1)
 152              	.LVL8:
 153              	.LBB18:
 154              	.LBB19:
 155              		.loc 2 27 36 is_stmt 1
 156              		.loc 2 27 45 is_stmt 0
 157 00a8 13071000 		li	a4,1
 158 00ac 2388E702 		sb	a4,48(a5)
 159              	.LVL9:
 160              	.LBE19:
 161              	.LBE18:
  54:src/tcb.cpp   ****     TCB::yield();
 162              		.loc 1 54 5 is_stmt 1
 163              		.loc 1 54 15 is_stmt 0
 164 00b0 97000000 		call	_ZN3TCB5yieldEv
 164      E7800000 
 165              	.LVL10:
GAS LISTING /tmp/cc7luO5z.s 			page 9


  55:src/tcb.cpp   **** }
 166              		.loc 1 55 1
 167 00b8 83308101 		ld	ra,24(sp)
 168              		.cfi_restore 1
 169 00bc 03340101 		ld	s0,16(sp)
 170              		.cfi_restore 8
 171              		.cfi_def_cfa 2, 32
 172 00c0 83348100 		ld	s1,8(sp)
 173              		.cfi_restore 9
 174 00c4 13010102 		addi	sp,sp,32
 175              		.cfi_def_cfa_offset 0
 176 00c8 67800000 		jr	ra
 177              		.cfi_endproc
 178              	.LFE49:
 180              		.align	2
 181              		.globl	_ZN3TCB8dispatchEv
 183              	_ZN3TCB8dispatchEv:
 184              	.LFB48:
  36:src/tcb.cpp   ****     TCB *old = running;
 185              		.loc 1 36 1 is_stmt 1
 186              		.cfi_startproc
 187 00cc 130101FE 		addi	sp,sp,-32
 188              		.cfi_def_cfa_offset 32
 189 00d0 233C1100 		sd	ra,24(sp)
 190 00d4 23388100 		sd	s0,16(sp)
 191 00d8 23349100 		sd	s1,8(sp)
 192 00dc 23302101 		sd	s2,0(sp)
 193              		.cfi_offset 1, -8
 194              		.cfi_offset 8, -16
 195              		.cfi_offset 9, -24
 196              		.cfi_offset 18, -32
 197 00e0 13040102 		addi	s0,sp,32
 198              		.cfi_def_cfa 8, 0
  37:src/tcb.cpp   ****     if (!old->isFinished() && !old->blocked) {
 199              		.loc 1 37 5
  37:src/tcb.cpp   ****     if (!old->isFinished() && !old->blocked) {
 200              		.loc 1 37 10 is_stmt 0
 201 00e4 97040000 		ld	s1,.LANCHOR0
 201      83B40400 
 202              	.LVL11:
  38:src/tcb.cpp   ****         Scheduler::put(old);
 203              		.loc 1 38 5 is_stmt 1
 204              	.LBB20:
 205              	.LBB21:
  26:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
 206              		.loc 2 26 31
  26:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
 207              		.loc 2 26 38 is_stmt 0
 208 00ec 83C70403 		lbu	a5,48(s1)
 209              	.LVL12:
 210              	.LBE21:
 211              	.LBE20:
  38:src/tcb.cpp   ****         Scheduler::put(old);
 212              		.loc 1 38 28
 213 00f0 63960700 		bnez	a5,.L11
  38:src/tcb.cpp   ****         Scheduler::put(old);
 214              		.loc 1 38 37 discriminator 1
GAS LISTING /tmp/cc7luO5z.s 			page 10


 215 00f4 83C71403 		lbu	a5,49(s1)
  38:src/tcb.cpp   ****         Scheduler::put(old);
 216              		.loc 1 38 28 discriminator 1
 217 00f8 638A0704 		beqz	a5,.L13
 218              	.L11:
  41:src/tcb.cpp   ****     Riscv::pushRegisters();
 219              		.loc 1 41 5 is_stmt 1
  41:src/tcb.cpp   ****     Riscv::pushRegisters();
 220              		.loc 1 41 29 is_stmt 0
 221 00fc 97000000 		call	_ZN9Scheduler3getEv@plt
 221      E7800000 
 222              	.LVL13:
  41:src/tcb.cpp   ****     Riscv::pushRegisters();
 223              		.loc 1 41 13
 224 0104 17090000 		lla	s2,.LANCHOR0
 224      13090900 
 225 010c 2330A900 		sd	a0,0(s2)
  42:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
 226              		.loc 1 42 5 is_stmt 1
  42:src/tcb.cpp   ****     TCB::contextSwitch(&old->context, &running->context);
 227              		.loc 1 42 25 is_stmt 0
 228 0110 97000000 		call	_ZN5Riscv13pushRegistersEv@plt
 228      E7800000 
 229              	.LVL14:
  43:src/tcb.cpp   ****     Riscv::popRegisters();
 230              		.loc 1 43 5 is_stmt 1
  43:src/tcb.cpp   ****     Riscv::popRegisters();
 231              		.loc 1 43 49 is_stmt 0
 232 0118 83350900 		ld	a1,0(s2)
  43:src/tcb.cpp   ****     Riscv::popRegisters();
 233              		.loc 1 43 23
 234 011c 93858501 		addi	a1,a1,24
 235 0120 13858401 		addi	a0,s1,24
 236 0124 97000000 		call	_ZN3TCB13contextSwitchEPNS_7ContextES1_@plt
 236      E7800000 
 237              	.LVL15:
  44:src/tcb.cpp   **** }
 238              		.loc 1 44 5 is_stmt 1
  44:src/tcb.cpp   **** }
 239              		.loc 1 44 24 is_stmt 0
 240 012c 97000000 		call	_ZN5Riscv12popRegistersEv@plt
 240      E7800000 
 241              	.LVL16:
  45:src/tcb.cpp   **** 
 242              		.loc 1 45 1
 243 0134 83308101 		ld	ra,24(sp)
 244              		.cfi_remember_state
 245              		.cfi_restore 1
 246 0138 03340101 		ld	s0,16(sp)
 247              		.cfi_restore 8
 248              		.cfi_def_cfa 2, 32
 249 013c 83348100 		ld	s1,8(sp)
 250              		.cfi_restore 9
 251              	.LVL17:
 252 0140 03390100 		ld	s2,0(sp)
 253              		.cfi_restore 18
 254 0144 13010102 		addi	sp,sp,32
GAS LISTING /tmp/cc7luO5z.s 			page 11


 255              		.cfi_def_cfa_offset 0
 256 0148 67800000 		jr	ra
 257              	.LVL18:
 258              	.L13:
 259              		.cfi_restore_state
  39:src/tcb.cpp   ****     }
 260              		.loc 1 39 9 is_stmt 1
  39:src/tcb.cpp   ****     }
 261              		.loc 1 39 23 is_stmt 0
 262 014c 13850400 		mv	a0,s1
 263 0150 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 263      E7800000 
 264              	.LVL19:
 265 0158 6FF05FFA 		j	.L11
 266              		.cfi_endproc
 267              	.LFE48:
 269              		.align	2
 270              		.globl	_ZN3TCBnwEm
 272              	_ZN3TCBnwEm:
 273              	.LFB50:
  56:src/tcb.cpp   **** 
  57:src/tcb.cpp   **** 
  58:src/tcb.cpp   **** void *TCB::operator new(size_t size) {
 274              		.loc 1 58 38 is_stmt 1
 275              		.cfi_startproc
 276              	.LVL20:
 277 015c 130101FF 		addi	sp,sp,-16
 278              		.cfi_def_cfa_offset 16
 279 0160 23341100 		sd	ra,8(sp)
 280 0164 23308100 		sd	s0,0(sp)
 281              		.cfi_offset 1, -8
 282              		.cfi_offset 8, -16
 283 0168 13040101 		addi	s0,sp,16
 284              		.cfi_def_cfa 8, 0
  59:src/tcb.cpp   ****     size = ((size + MemoryAllocator::memSegSize) % MEM_BLOCK_SIZE == 0 ? (size + MemoryAllocator::m
 285              		.loc 1 59 5
 286              		.loc 1 59 19 is_stmt 0
 287 016c 97070000 		la	a5,_ZN15MemoryAllocator10memSegSizeE
 287      83B70700 
 288 0174 83B70700 		ld	a5,0(a5)
 289 0178 3305F500 		add	a0,a0,a5
 290              	.LVL21:
 291              		.loc 1 59 50
 292 017c 9377F503 		andi	a5,a0,63
 293              		.loc 1 59 72
 294 0180 63900702 		bnez	a5,.L15
 295              		.loc 1 59 72 discriminator 1
 296 0184 13556500 		srli	a0,a0,6
 297              	.L16:
 298              	.LVL22:
  60:src/tcb.cpp   ****             (size + MemoryAllocator::memSegSize) / MEM_BLOCK_SIZE + 1);
  61:src/tcb.cpp   **** 
  62:src/tcb.cpp   ****     return MemoryAllocator::mem_alloc(size);
 299              		.loc 1 62 5 is_stmt 1 discriminator 4
 300              		.loc 1 62 38 is_stmt 0 discriminator 4
 301 0188 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 301      E7800000 
GAS LISTING /tmp/cc7luO5z.s 			page 12


 302              	.LVL23:
  63:src/tcb.cpp   **** }
 303              		.loc 1 63 1 discriminator 4
 304 0190 83308100 		ld	ra,8(sp)
 305              		.cfi_remember_state
 306              		.cfi_restore 1
 307 0194 03340100 		ld	s0,0(sp)
 308              		.cfi_restore 8
 309              		.cfi_def_cfa 2, 16
 310 0198 13010101 		addi	sp,sp,16
 311              		.cfi_def_cfa_offset 0
 312 019c 67800000 		jr	ra
 313              	.LVL24:
 314              	.L15:
 315              		.cfi_restore_state
  60:src/tcb.cpp   ****             (size + MemoryAllocator::memSegSize) / MEM_BLOCK_SIZE + 1);
 316              		.loc 1 60 50 discriminator 2
 317 01a0 13556500 		srli	a0,a0,6
  59:src/tcb.cpp   ****     size = ((size + MemoryAllocator::memSegSize) % MEM_BLOCK_SIZE == 0 ? (size + MemoryAllocator::m
 318              		.loc 1 59 72 discriminator 2
 319 01a4 13051500 		addi	a0,a0,1
 320 01a8 6FF01FFE 		j	.L16
 321              		.cfi_endproc
 322              	.LFE50:
 324              		.align	2
 325              		.globl	_ZN3TCBdlEPv
 327              	_ZN3TCBdlEPv:
 328              	.LFB51:
  64:src/tcb.cpp   **** 
  65:src/tcb.cpp   **** void TCB::operator delete(void *ptr) {
 329              		.loc 1 65 38 is_stmt 1
 330              		.cfi_startproc
 331              	.LVL25:
 332 01ac 130101FF 		addi	sp,sp,-16
 333              		.cfi_def_cfa_offset 16
 334 01b0 23341100 		sd	ra,8(sp)
 335 01b4 23308100 		sd	s0,0(sp)
 336              		.cfi_offset 1, -8
 337              		.cfi_offset 8, -16
 338 01b8 13040101 		addi	s0,sp,16
 339              		.cfi_def_cfa 8, 0
  66:src/tcb.cpp   ****     MemoryAllocator::mem_free(ptr);
 340              		.loc 1 66 5
 341              		.loc 1 66 30 is_stmt 0
 342 01bc 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 342      E7800000 
 343              	.LVL26:
  67:src/tcb.cpp   **** }
 344              		.loc 1 67 1
 345 01c4 83308100 		ld	ra,8(sp)
 346              		.cfi_restore 1
 347 01c8 03340100 		ld	s0,0(sp)
 348              		.cfi_restore 8
 349              		.cfi_def_cfa 2, 16
 350 01cc 13010101 		addi	sp,sp,16
 351              		.cfi_def_cfa_offset 0
 352 01d0 67800000 		jr	ra
GAS LISTING /tmp/cc7luO5z.s 			page 13


 353              		.cfi_endproc
 354              	.LFE51:
 356              		.align	2
 357              		.globl	_ZN3TCB12createThreadEPFvPvES0_S0_
 359              	_ZN3TCB12createThreadEPFvPvES0_S0_:
 360              	.LFB44:
  15:src/tcb.cpp   ****     return new TCB(body, arg, stackSpace, TIME_SLICE);
 361              		.loc 1 15 1 is_stmt 1
 362              		.cfi_startproc
 363              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 364              		.cfi_lsda 0x1b,.LLSDA44
 365              	.LVL27:
 366 01d4 130101FD 		addi	sp,sp,-48
 367              		.cfi_def_cfa_offset 48
 368 01d8 23341102 		sd	ra,40(sp)
 369 01dc 23308102 		sd	s0,32(sp)
 370 01e0 233C9100 		sd	s1,24(sp)
 371 01e4 23382101 		sd	s2,16(sp)
 372 01e8 23343101 		sd	s3,8(sp)
 373 01ec 23304101 		sd	s4,0(sp)
 374              		.cfi_offset 1, -8
 375              		.cfi_offset 8, -16
 376              		.cfi_offset 9, -24
 377              		.cfi_offset 18, -32
 378              		.cfi_offset 19, -40
 379              		.cfi_offset 20, -48
 380 01f0 13040103 		addi	s0,sp,48
 381              		.cfi_def_cfa 8, 0
 382 01f4 93090500 		mv	s3,a0
 383 01f8 138A0500 		mv	s4,a1
 384 01fc 13090600 		mv	s2,a2
  16:src/tcb.cpp   **** }
 385              		.loc 1 16 5
  16:src/tcb.cpp   **** }
 386              		.loc 1 16 53 is_stmt 0
 387 0200 13058004 		li	a0,72
 388              	.LVL28:
 389              	.LEHB0:
 390 0204 97000000 		call	_ZN3TCBnwEm
 390      E7800000 
 391              	.LVL29:
 392              	.LEHE0:
 393 020c 93040500 		mv	s1,a0
 394              	.LVL30:
 395              	.LBB25:
 396              	.LBB26:
  28:src/../h/tcb.hpp **** 
  29:src/../h/tcb.hpp ****     bool isBlocked() const { return blocked; }
  30:src/../h/tcb.hpp ****     void setBlocked(bool value) { blocked = value; }
  31:src/../h/tcb.hpp **** 
  32:src/../h/tcb.hpp ****     bool isSys() const {return sys;}
  33:src/../h/tcb.hpp **** 
  34:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
  35:src/../h/tcb.hpp **** 
  36:src/../h/tcb.hpp ****     using Body = void (*)(void *);
  37:src/../h/tcb.hpp **** 
  38:src/../h/tcb.hpp ****     static TCB *createThread(Body body, void* arg, void* stackSpace);
GAS LISTING /tmp/cc7luO5z.s 			page 14


  39:src/../h/tcb.hpp **** 
  40:src/../h/tcb.hpp ****     //int thread_create ( thread_t* handle, void(*body)(void*), void* arg, void* stackSpace);  //0x
  41:src/../h/tcb.hpp ****     static int threadCreate (TCB** handle, void(*body)(void*), void* arg, void* stackSpace);
  42:src/../h/tcb.hpp **** 
  43:src/../h/tcb.hpp ****     static int thread_exit();
  44:src/../h/tcb.hpp **** 
  45:src/../h/tcb.hpp ****     static void yield();
  46:src/../h/tcb.hpp **** 
  47:src/../h/tcb.hpp ****     static TCB *running;
  48:src/../h/tcb.hpp ****     void* operator new(size_t size);
  49:src/../h/tcb.hpp ****     void* operator new[](size_t size);
  50:src/../h/tcb.hpp ****     void operator delete(void* ptr);
  51:src/../h/tcb.hpp ****     void operator delete[](void* ptr);
  52:src/../h/tcb.hpp **** 
  53:src/../h/tcb.hpp ****     static void dispatch();
  54:src/../h/tcb.hpp **** private:
  55:src/../h/tcb.hpp ****     TCB(Body body, void* arg, void* stackSpace, uint64 timeSlice) :
  56:src/../h/tcb.hpp ****             body(body),
  57:src/../h/tcb.hpp ****             arg(arg),
  58:src/../h/tcb.hpp ****             stack(body != nullptr ? (uint64*) stackSpace : nullptr),
  59:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
  60:src/../h/tcb.hpp ****                      stack != nullptr ? (uint64) &stack[DEFAULT_STACK_SIZE/8] : 0
  61:src/../h/tcb.hpp ****                     }),
  62:src/../h/tcb.hpp ****             timeSlice(timeSlice),
  63:src/../h/tcb.hpp ****             finished(false),
  64:src/../h/tcb.hpp ****             blocked(false),
  65:src/../h/tcb.hpp ****             sys(true),
  66:src/../h/tcb.hpp ****             nextSem(nullptr)
 397              		.loc 2 66 28
 398 0210 23303501 		sd	s3,0(a0)
 399 0214 23344501 		sd	s4,8(a0)
  58:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 400              		.loc 2 58 35
 401 0218 638E0906 		beqz	s3,.L30
 402              	.LVL31:
 403              	.L21:
 404              		.loc 2 66 28
 405 021c 23B82401 		sd	s2,16(s1)
 406 0220 97070000 		lla	a5,_ZN3TCB13threadWrapperEv
 406      93870700 
 407 0228 23BCF400 		sd	a5,24(s1)
  60:src/../h/tcb.hpp ****                     }),
 408              		.loc 2 60 39
 409 022c 63080906 		beqz	s2,.L27
  60:src/../h/tcb.hpp ****                     }),
 410              		.loc 2 60 50
 411 0230 37160000 		li	a2,4096
 412 0234 3309C900 		add	s2,s2,a2
 413              	.L22:
 414              		.loc 2 66 28
 415 0238 23B02403 		sd	s2,32(s1)
 416 023c 93072000 		li	a5,2
 417 0240 23B4F402 		sd	a5,40(s1)
 418 0244 23880402 		sb	zero,48(s1)
 419 0248 A3880402 		sb	zero,49(s1)
 420 024c 93071000 		li	a5,1
 421 0250 2389F402 		sb	a5,50(s1)
GAS LISTING /tmp/cc7luO5z.s 			page 15


 422 0254 23BC0402 		sd	zero,56(s1)
  67:src/../h/tcb.hpp ****     {
  68:src/../h/tcb.hpp ****         id = cnt++;
 423              		.loc 2 68 9 is_stmt 1
 424              		.loc 2 68 17 is_stmt 0
 425 0258 17070000 		lla	a4,.LANCHOR1
 425      13070700 
 426 0260 83270700 		lw	a5,0(a4)
 427 0264 9B861700 		addiw	a3,a5,1
 428 0268 2320D700 		sw	a3,0(a4)
 429              		.loc 2 68 12
 430 026c 23A0F404 		sw	a5,64(s1)
  69:src/../h/tcb.hpp **** 
  70:src/../h/tcb.hpp ****         if (id != mainThread && id != idleThread ) sys = false;
 431              		.loc 2 70 9 is_stmt 1
 432              		.loc 2 70 30 is_stmt 0
 433 0270 9B87F7FF 		addiw	a5,a5,-1
 434              		.loc 2 70 9
 435 0274 13071000 		li	a4,1
 436 0278 6374F700 		bleu	a5,a4,.L23
 437              		.loc 2 70 52 is_stmt 1
 438              		.loc 2 70 56 is_stmt 0
 439 027c 23890402 		sb	zero,50(s1)
 440              	.L23:
  71:src/../h/tcb.hpp ****         if (body != nullptr) { Scheduler::put(this); }
 441              		.loc 2 71 9 is_stmt 1
 442 0280 63800904 		beqz	s3,.L20
 443              		.loc 2 71 32
 444              		.loc 2 71 46 is_stmt 0
 445 0284 13850400 		mv	a0,s1
 446              	.LEHB1:
 447 0288 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 447      E7800000 
 448              	.LVL32:
 449              	.LEHE1:
 450 0290 6F000003 		j	.L20
 451              	.LVL33:
 452              	.L30:
  58:src/../h/tcb.hpp ****             context({(uint64) &threadWrapper,
 453              		.loc 2 58 35
 454 0294 13090000 		li	s2,0
 455              	.LVL34:
 456 0298 6FF05FF8 		j	.L21
 457              	.L27:
  60:src/../h/tcb.hpp ****                     }),
 458              		.loc 2 60 39
 459 029c 13090000 		li	s2,0
 460 02a0 6FF09FF9 		j	.L22
 461              	.L28:
 462 02a4 13090500 		mv	s2,a0
 463              	.LBE26:
 464              	.LBE25:
  16:src/tcb.cpp   **** }
 465              		.loc 1 16 53
 466 02a8 13850400 		mv	a0,s1
 467 02ac 97000000 		call	_ZN3TCBdlEPv
 467      E7800000 
GAS LISTING /tmp/cc7luO5z.s 			page 16


 468              	.LVL35:
 469 02b4 13050900 		mv	a0,s2
 470              	.LEHB2:
 471 02b8 97000000 		call	_Unwind_Resume@plt
 471      E7800000 
 472              	.LVL36:
 473              	.LEHE2:
 474              	.L20:
  17:src/tcb.cpp   **** int TCB::threadCreate(TCB** handle, void (*body)(void *), void *arg, void *stackSpace) {
 475              		.loc 1 17 1
 476 02c0 13850400 		mv	a0,s1
 477 02c4 83308102 		ld	ra,40(sp)
 478              		.cfi_restore 1
 479 02c8 03340102 		ld	s0,32(sp)
 480              		.cfi_restore 8
 481              		.cfi_def_cfa 2, 48
 482 02cc 83348101 		ld	s1,24(sp)
 483              		.cfi_restore 9
 484              	.LVL37:
 485 02d0 03390101 		ld	s2,16(sp)
 486              		.cfi_restore 18
 487 02d4 83398100 		ld	s3,8(sp)
 488              		.cfi_restore 19
 489              	.LVL38:
 490 02d8 033A0100 		ld	s4,0(sp)
 491              		.cfi_restore 20
 492              	.LVL39:
 493 02dc 13010103 		addi	sp,sp,48
 494              		.cfi_def_cfa_offset 0
 495 02e0 67800000 		jr	ra
 496              		.cfi_endproc
 497              	.LFE44:
 498              		.globl	__gxx_personality_v0
 499              		.section	.gcc_except_table,"a",@progbits
 500              	.LLSDA44:
 501 0000 FF       		.byte	0xff
 502 0001 FF       		.byte	0xff
 503 0002 03       		.byte	0x3
 504 0003 27       		.byte	0x27
 505 0004 00000000 		.4byte	.LEHB0-.LFB44
 506 0008 00000000 		.4byte	.LEHE0-.LEHB0
 507 000c 00000000 		.4byte	0
 508 0010 00       		.byte	0
 509 0011 00000000 		.4byte	.LEHB1-.LFB44
 510 0015 00000000 		.4byte	.LEHE1-.LEHB1
 511 0019 00000000 		.4byte	.L28-.LFB44
 512 001d 00       		.byte	0
 513 001e 00000000 		.4byte	.LEHB2-.LFB44
 514 0022 00000000 		.4byte	.LEHE2-.LEHB2
 515 0026 00000000 		.4byte	0
 516 002a 00       		.byte	0
 517              		.text
 519              		.align	2
 520              		.globl	_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_
 522              	_ZN3TCB12threadCreateEPPS_PFvPvES2_S2_:
 523              	.LFB45:
  18:src/tcb.cpp   ****     *handle =  createThread(body, arg, stackSpace);
GAS LISTING /tmp/cc7luO5z.s 			page 17


 524              		.loc 1 18 88 is_stmt 1
 525              		.cfi_startproc
 526              	.LVL40:
 527 02e4 130101FE 		addi	sp,sp,-32
 528              		.cfi_def_cfa_offset 32
 529 02e8 233C1100 		sd	ra,24(sp)
 530 02ec 23388100 		sd	s0,16(sp)
 531 02f0 23349100 		sd	s1,8(sp)
 532              		.cfi_offset 1, -8
 533              		.cfi_offset 8, -16
 534              		.cfi_offset 9, -24
 535 02f4 13040102 		addi	s0,sp,32
 536              		.cfi_def_cfa 8, 0
 537 02f8 93040500 		mv	s1,a0
 538 02fc 13850500 		mv	a0,a1
 539              	.LVL41:
 540 0300 93050600 		mv	a1,a2
 541              	.LVL42:
  19:src/tcb.cpp   ****     return 0;
 542              		.loc 1 19 5
  19:src/tcb.cpp   ****     return 0;
 543              		.loc 1 19 28 is_stmt 0
 544 0304 13860600 		mv	a2,a3
 545              	.LVL43:
 546 0308 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_S0_
 546      E7800000 
 547              	.LVL44:
  19:src/tcb.cpp   ****     return 0;
 548              		.loc 1 19 13
 549 0310 23B0A400 		sd	a0,0(s1)
  20:src/tcb.cpp   **** }
 550              		.loc 1 20 5 is_stmt 1
  21:src/tcb.cpp   **** int TCB::thread_exit() {
 551              		.loc 1 21 1 is_stmt 0
 552 0314 13050000 		li	a0,0
 553 0318 83308101 		ld	ra,24(sp)
 554              		.cfi_restore 1
 555 031c 03340101 		ld	s0,16(sp)
 556              		.cfi_restore 8
 557              		.cfi_def_cfa 2, 32
 558 0320 83348100 		ld	s1,8(sp)
 559              		.cfi_restore 9
 560              	.LVL45:
 561 0324 13010102 		addi	sp,sp,32
 562              		.cfi_def_cfa_offset 0
 563 0328 67800000 		jr	ra
 564              		.cfi_endproc
 565              	.LFE45:
 567              		.align	2
 568              		.globl	_ZN3TCBnaEm
 570              	_ZN3TCBnaEm:
 571              	.LFB52:
  68:src/tcb.cpp   **** 
  69:src/tcb.cpp   **** void *TCB::operator new[](size_t size) {
 572              		.loc 1 69 40 is_stmt 1
 573              		.cfi_startproc
 574              	.LVL46:
GAS LISTING /tmp/cc7luO5z.s 			page 18


 575 032c 130101FF 		addi	sp,sp,-16
 576              		.cfi_def_cfa_offset 16
 577 0330 23341100 		sd	ra,8(sp)
 578 0334 23308100 		sd	s0,0(sp)
 579              		.cfi_offset 1, -8
 580              		.cfi_offset 8, -16
 581 0338 13040101 		addi	s0,sp,16
 582              		.cfi_def_cfa 8, 0
  70:src/tcb.cpp   **** 
  71:src/tcb.cpp   ****     size = ((size + MemoryAllocator::memSegSize) % MEM_BLOCK_SIZE == 0 ? (size + MemoryAllocator::m
 583              		.loc 1 71 5
 584              		.loc 1 71 19 is_stmt 0
 585 033c 97070000 		la	a5,_ZN15MemoryAllocator10memSegSizeE
 585      83B70700 
 586 0344 83B70700 		ld	a5,0(a5)
 587 0348 3305F500 		add	a0,a0,a5
 588              	.LVL47:
 589              		.loc 1 71 50
 590 034c 9377F503 		andi	a5,a0,63
 591              		.loc 1 71 72
 592 0350 63900702 		bnez	a5,.L34
 593              		.loc 1 71 72 discriminator 1
 594 0354 13556500 		srli	a0,a0,6
 595              	.L35:
 596              	.LVL48:
  72:src/tcb.cpp   ****             (size + MemoryAllocator::memSegSize) / MEM_BLOCK_SIZE + 1);
  73:src/tcb.cpp   **** 
  74:src/tcb.cpp   ****     return MemoryAllocator::mem_alloc(size);
 597              		.loc 1 74 5 is_stmt 1 discriminator 4
 598              		.loc 1 74 38 is_stmt 0 discriminator 4
 599 0358 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 599      E7800000 
 600              	.LVL49:
  75:src/tcb.cpp   **** }
 601              		.loc 1 75 1 discriminator 4
 602 0360 83308100 		ld	ra,8(sp)
 603              		.cfi_remember_state
 604              		.cfi_restore 1
 605 0364 03340100 		ld	s0,0(sp)
 606              		.cfi_restore 8
 607              		.cfi_def_cfa 2, 16
 608 0368 13010101 		addi	sp,sp,16
 609              		.cfi_def_cfa_offset 0
 610 036c 67800000 		jr	ra
 611              	.LVL50:
 612              	.L34:
 613              		.cfi_restore_state
  72:src/tcb.cpp   ****             (size + MemoryAllocator::memSegSize) / MEM_BLOCK_SIZE + 1);
 614              		.loc 1 72 50 discriminator 2
 615 0370 13556500 		srli	a0,a0,6
  71:src/tcb.cpp   ****             (size + MemoryAllocator::memSegSize) / MEM_BLOCK_SIZE + 1);
 616              		.loc 1 71 72 discriminator 2
 617 0374 13051500 		addi	a0,a0,1
 618 0378 6FF01FFE 		j	.L35
 619              		.cfi_endproc
 620              	.LFE52:
 622              		.align	2
GAS LISTING /tmp/cc7luO5z.s 			page 19


 623              		.globl	_ZN3TCBdaEPv
 625              	_ZN3TCBdaEPv:
 626              	.LFB53:
  76:src/tcb.cpp   **** 
  77:src/tcb.cpp   **** void TCB::operator delete[](void *ptr) {
 627              		.loc 1 77 40 is_stmt 1
 628              		.cfi_startproc
 629              	.LVL51:
 630 037c 130101FF 		addi	sp,sp,-16
 631              		.cfi_def_cfa_offset 16
 632 0380 23341100 		sd	ra,8(sp)
 633 0384 23308100 		sd	s0,0(sp)
 634              		.cfi_offset 1, -8
 635              		.cfi_offset 8, -16
 636 0388 13040101 		addi	s0,sp,16
 637              		.cfi_def_cfa 8, 0
  78:src/tcb.cpp   ****     MemoryAllocator::mem_free(ptr);
 638              		.loc 1 78 5
 639              		.loc 1 78 30 is_stmt 0
 640 038c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 640      E7800000 
 641              	.LVL52:
  79:src/tcb.cpp   **** }
 642              		.loc 1 79 1
 643 0394 83308100 		ld	ra,8(sp)
 644              		.cfi_restore 1
 645 0398 03340100 		ld	s0,0(sp)
 646              		.cfi_restore 8
 647              		.cfi_def_cfa 2, 16
 648 039c 13010101 		addi	sp,sp,16
 649              		.cfi_def_cfa_offset 0
 650 03a0 67800000 		jr	ra
 651              		.cfi_endproc
 652              	.LFE53:
 654              		.globl	_ZN3TCB16timeSliceCounterE
 655              		.globl	_ZN3TCB3cntE
 656              		.globl	_ZN3TCB7runningE
 657              		.data
 658              		.align	2
 659              		.set	.LANCHOR1,. + 0
 662              	_ZN3TCB3cntE:
 663 0000 01000000 		.word	1
 664              		.bss
 665              		.align	3
 666              		.set	.LANCHOR0,. + 0
 669              	_ZN3TCB7runningE:
 670 0000 00000000 		.zero	8
 670      00000000 
 673              	_ZN3TCB16timeSliceCounterE:
 674 0008 00000000 		.zero	8
 674      00000000 
 675              		.text
 676              	.Letext0:
 677              		.file 4 "src/../h/../lib/hw.h"
 678              		.file 5 "src/../h/scheduler.hpp"
 679              		.file 6 "src/../h/MemoryAllocator.hpp"
 680              		.file 7 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/cc7luO5z.s 			page 20


 3957              		.align	3
 3960              	DW.ref.__gxx_personality_v0:
 3961 0000 00000000 		.dword	__gxx_personality_v0
 3961      00000000 
 3962              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 3963              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc7luO5z.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcb.cpp
     /tmp/cc7luO5z.s:9      .text:0000000000000000 _ZN3TCB11thread_exitEv
     /tmp/cc7luO5z.s:13     .text:0000000000000000 .L0 
     /tmp/cc7luO5z.s:14     .text:0000000000000000 .L0 
     /tmp/cc7luO5z.s:15     .text:0000000000000004 .L0 
     /tmp/cc7luO5z.s:17     .text:0000000000000008 .L0 
     /tmp/cc7luO5z.s:19     .text:000000000000000c .L0 
     /tmp/cc7luO5z.s:21     .text:000000000000000c .L0 
     /tmp/cc7luO5z.s:22     .text:000000000000000c .L0 
     /tmp/cc7luO5z.s:28     .text:0000000000000014 .L0 
     /tmp/cc7luO5z.s:29     .text:0000000000000014 .L0 
     /tmp/cc7luO5z.s:34     .text:0000000000000018 .L0 
     /tmp/cc7luO5z.s:39     .text:000000000000001c .L0 
     /tmp/cc7luO5z.s:40     .text:000000000000001c .L0 
     /tmp/cc7luO5z.s:41     .text:000000000000001c .L0 
     /tmp/cc7luO5z.s:47     .text:0000000000000024 .L0 
     /tmp/cc7luO5z.s:48     .text:0000000000000024 .L0 
     /tmp/cc7luO5z.s:51     .text:0000000000000028 .L0 
     /tmp/cc7luO5z.s:52     .text:000000000000002c .L0 
     /tmp/cc7luO5z.s:53     .text:000000000000002c .L0 
     /tmp/cc7luO5z.s:54     .text:000000000000002c .L0 
     /tmp/cc7luO5z.s:56     .text:0000000000000030 .L0 
     /tmp/cc7luO5z.s:59     .text:0000000000000034 .L0 
     /tmp/cc7luO5z.s:61     .text:0000000000000034 .L0 
     /tmp/cc7luO5z.s:63     .text:000000000000003c .L0 
     /tmp/cc7luO5z.s:69     .text:000000000000003c _ZN3TCB5yieldEv
     /tmp/cc7luO5z.s:72     .text:000000000000003c .L0 
     /tmp/cc7luO5z.s:73     .text:000000000000003c .L0 
     /tmp/cc7luO5z.s:74     .text:0000000000000040 .L0 
     /tmp/cc7luO5z.s:76     .text:0000000000000044 .L0 
     /tmp/cc7luO5z.s:78     .text:0000000000000048 .L0 
     /tmp/cc7luO5z.s:80     .text:0000000000000048 .L0 
         src/tcb.cpp:32     .text:0000000000000048 .L0 
     /tmp/cc7luO5z.s:87     .text:000000000000004c .L0 
     /tmp/cc7luO5z.s:88     .text:0000000000000050 .L0 
     /tmp/cc7luO5z.s:89     .text:0000000000000050 .L0 
     /tmp/cc7luO5z.s:91     .text:0000000000000054 .L0 
     /tmp/cc7luO5z.s:93     .text:0000000000000058 .L0 
     /tmp/cc7luO5z.s:99     .text:0000000000000058 _ZN3TCB13threadWrapperEv
     /tmp/cc7luO5z.s:102    .text:0000000000000058 .L0 
     /tmp/cc7luO5z.s:103    .text:0000000000000058 .L0 
     /tmp/cc7luO5z.s:104    .text:000000000000005c .L0 
     /tmp/cc7luO5z.s:108    .text:0000000000000068 .L0 
     /tmp/cc7luO5z.s:109    .text:0000000000000068 .L0 
     /tmp/cc7luO5z.s:110    .text:0000000000000068 .L0 
     /tmp/cc7luO5z.s:112    .text:000000000000006c .L0 
     /tmp/cc7luO5z.s:114    .text:000000000000006c .L0 
     /tmp/cc7luO5z.s:115    .text:000000000000006c .L0 
     /tmp/cc7luO5z.s:118    .text:0000000000000078 .L0 
     /tmp/cc7luO5z.s:124    .text:000000000000007c .L0 
     /tmp/cc7luO5z.s:125    .text:000000000000007c .L0 
     /tmp/cc7luO5z.s:126    .text:000000000000007c .L0 
     /tmp/cc7luO5z.s:137    .text:0000000000000084 .L0 
     /tmp/cc7luO5z.s:138    .text:0000000000000084 .L0 
     /tmp/cc7luO5z.s:141    .text:000000000000008c .L0 
     /tmp/cc7luO5z.s:142    .text:000000000000008c .L0 
GAS LISTING /tmp/cc7luO5z.s 			page 22


     /tmp/cc7luO5z.s:146    .text:000000000000009c .L0 
     /tmp/cc7luO5z.s:150    .text:00000000000000a4 .L0 
     /tmp/cc7luO5z.s:151    .text:00000000000000a4 .L0 
     /tmp/cc7luO5z.s:156    .text:00000000000000a8 .L0 
     /tmp/cc7luO5z.s:157    .text:00000000000000a8 .L0 
     /tmp/cc7luO5z.s:163    .text:00000000000000b0 .L0 
     /tmp/cc7luO5z.s:164    .text:00000000000000b0 .L0 
     /tmp/cc7luO5z.s:167    .text:00000000000000b8 .L0 
     /tmp/cc7luO5z.s:168    .text:00000000000000bc .L0 
     /tmp/cc7luO5z.s:170    .text:00000000000000c0 .L0 
     /tmp/cc7luO5z.s:171    .text:00000000000000c0 .L0 
     /tmp/cc7luO5z.s:173    .text:00000000000000c4 .L0 
     /tmp/cc7luO5z.s:175    .text:00000000000000c8 .L0 
     /tmp/cc7luO5z.s:177    .text:00000000000000cc .L0 
     /tmp/cc7luO5z.s:183    .text:00000000000000cc _ZN3TCB8dispatchEv
     /tmp/cc7luO5z.s:186    .text:00000000000000cc .L0 
     /tmp/cc7luO5z.s:187    .text:00000000000000cc .L0 
     /tmp/cc7luO5z.s:188    .text:00000000000000d0 .L0 
     /tmp/cc7luO5z.s:193    .text:00000000000000e0 .L0 
     /tmp/cc7luO5z.s:194    .text:00000000000000e0 .L0 
     /tmp/cc7luO5z.s:195    .text:00000000000000e0 .L0 
     /tmp/cc7luO5z.s:196    .text:00000000000000e0 .L0 
     /tmp/cc7luO5z.s:198    .text:00000000000000e4 .L0 
     /tmp/cc7luO5z.s:200    .text:00000000000000e4 .L0 
     /tmp/cc7luO5z.s:201    .text:00000000000000e4 .L0 
     /tmp/cc7luO5z.s:206    .text:00000000000000ec .L0 
     /tmp/cc7luO5z.s:207    .text:00000000000000ec .L0 
     /tmp/cc7luO5z.s:208    .text:00000000000000ec .L0 
     /tmp/cc7luO5z.s:213    .text:00000000000000f0 .L0 
     /tmp/cc7luO5z.s:215    .text:00000000000000f4 .L0 
     /tmp/cc7luO5z.s:217    .text:00000000000000f8 .L0 
     /tmp/cc7luO5z.s:220    .text:00000000000000fc .L0 
     /tmp/cc7luO5z.s:221    .text:00000000000000fc .L0 
     /tmp/cc7luO5z.s:224    .text:0000000000000104 .L0 
     /tmp/cc7luO5z.s:227    .text:0000000000000110 .L0 
     /tmp/cc7luO5z.s:228    .text:0000000000000110 .L0 
     /tmp/cc7luO5z.s:231    .text:0000000000000118 .L0 
     /tmp/cc7luO5z.s:232    .text:0000000000000118 .L0 
     /tmp/cc7luO5z.s:234    .text:000000000000011c .L0 
     /tmp/cc7luO5z.s:239    .text:000000000000012c .L0 
     /tmp/cc7luO5z.s:240    .text:000000000000012c .L0 
     /tmp/cc7luO5z.s:243    .text:0000000000000134 .L0 
     /tmp/cc7luO5z.s:244    .text:0000000000000138 .L0 
     /tmp/cc7luO5z.s:245    .text:0000000000000138 .L0 
     /tmp/cc7luO5z.s:247    .text:000000000000013c .L0 
     /tmp/cc7luO5z.s:248    .text:000000000000013c .L0 
     /tmp/cc7luO5z.s:250    .text:0000000000000140 .L0 
     /tmp/cc7luO5z.s:253    .text:0000000000000144 .L0 
     /tmp/cc7luO5z.s:255    .text:0000000000000148 .L0 
     /tmp/cc7luO5z.s:259    .text:000000000000014c .L0 
     /tmp/cc7luO5z.s:261    .text:000000000000014c .L0 
     /tmp/cc7luO5z.s:262    .text:000000000000014c .L0 
     /tmp/cc7luO5z.s:266    .text:000000000000015c .L0 
     /tmp/cc7luO5z.s:272    .text:000000000000015c _ZN3TCBnwEm
     /tmp/cc7luO5z.s:275    .text:000000000000015c .L0 
     /tmp/cc7luO5z.s:277    .text:000000000000015c .L0 
     /tmp/cc7luO5z.s:278    .text:0000000000000160 .L0 
GAS LISTING /tmp/cc7luO5z.s 			page 23


     /tmp/cc7luO5z.s:281    .text:0000000000000168 .L0 
     /tmp/cc7luO5z.s:282    .text:0000000000000168 .L0 
     /tmp/cc7luO5z.s:284    .text:000000000000016c .L0 
     /tmp/cc7luO5z.s:286    .text:000000000000016c .L0 
     /tmp/cc7luO5z.s:287    .text:000000000000016c .L0 
     /tmp/cc7luO5z.s:292    .text:000000000000017c .L0 
     /tmp/cc7luO5z.s:294    .text:0000000000000180 .L0 
     /tmp/cc7luO5z.s:296    .text:0000000000000184 .L0 
     /tmp/cc7luO5z.s:300    .text:0000000000000188 .L0 
     /tmp/cc7luO5z.s:301    .text:0000000000000188 .L0 
     /tmp/cc7luO5z.s:304    .text:0000000000000190 .L0 
     /tmp/cc7luO5z.s:305    .text:0000000000000194 .L0 
     /tmp/cc7luO5z.s:306    .text:0000000000000194 .L0 
     /tmp/cc7luO5z.s:308    .text:0000000000000198 .L0 
     /tmp/cc7luO5z.s:309    .text:0000000000000198 .L0 
     /tmp/cc7luO5z.s:311    .text:000000000000019c .L0 
     /tmp/cc7luO5z.s:315    .text:00000000000001a0 .L0 
     /tmp/cc7luO5z.s:317    .text:00000000000001a0 .L0 
     /tmp/cc7luO5z.s:319    .text:00000000000001a4 .L0 
     /tmp/cc7luO5z.s:321    .text:00000000000001ac .L0 
     /tmp/cc7luO5z.s:327    .text:00000000000001ac _ZN3TCBdlEPv
     /tmp/cc7luO5z.s:330    .text:00000000000001ac .L0 
     /tmp/cc7luO5z.s:332    .text:00000000000001ac .L0 
     /tmp/cc7luO5z.s:333    .text:00000000000001b0 .L0 
     /tmp/cc7luO5z.s:336    .text:00000000000001b8 .L0 
     /tmp/cc7luO5z.s:337    .text:00000000000001b8 .L0 
     /tmp/cc7luO5z.s:339    .text:00000000000001bc .L0 
     /tmp/cc7luO5z.s:341    .text:00000000000001bc .L0 
     /tmp/cc7luO5z.s:342    .text:00000000000001bc .L0 
     /tmp/cc7luO5z.s:345    .text:00000000000001c4 .L0 
     /tmp/cc7luO5z.s:346    .text:00000000000001c8 .L0 
     /tmp/cc7luO5z.s:348    .text:00000000000001cc .L0 
     /tmp/cc7luO5z.s:349    .text:00000000000001cc .L0 
     /tmp/cc7luO5z.s:351    .text:00000000000001d0 .L0 
     /tmp/cc7luO5z.s:353    .text:00000000000001d4 .L0 
     /tmp/cc7luO5z.s:359    .text:00000000000001d4 _ZN3TCB12createThreadEPFvPvES0_S0_
     /tmp/cc7luO5z.s:362    .text:00000000000001d4 .L0 
     /tmp/cc7luO5z.s:3960   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc7luO5z.s:366    .text:00000000000001d4 .L0 
     /tmp/cc7luO5z.s:367    .text:00000000000001d8 .L0 
     /tmp/cc7luO5z.s:374    .text:00000000000001f0 .L0 
     /tmp/cc7luO5z.s:375    .text:00000000000001f0 .L0 
     /tmp/cc7luO5z.s:376    .text:00000000000001f0 .L0 
     /tmp/cc7luO5z.s:377    .text:00000000000001f0 .L0 
     /tmp/cc7luO5z.s:378    .text:00000000000001f0 .L0 
     /tmp/cc7luO5z.s:379    .text:00000000000001f0 .L0 
     /tmp/cc7luO5z.s:381    .text:00000000000001f4 .L0 
     /tmp/cc7luO5z.s:386    .text:0000000000000200 .L0 
     /tmp/cc7luO5z.s:387    .text:0000000000000200 .L0 
     /tmp/cc7luO5z.s:398    .text:0000000000000210 .L0 
     /tmp/cc7luO5z.s:401    .text:0000000000000218 .L0 
     /tmp/cc7luO5z.s:405    .text:000000000000021c .L0 
     /tmp/cc7luO5z.s:409    .text:000000000000022c .L0 
     /tmp/cc7luO5z.s:411    .text:0000000000000230 .L0 
     /tmp/cc7luO5z.s:415    .text:0000000000000238 .L0 
     /tmp/cc7luO5z.s:424    .text:0000000000000258 .L0 
     /tmp/cc7luO5z.s:425    .text:0000000000000258 .L0 
GAS LISTING /tmp/cc7luO5z.s 			page 24


     /tmp/cc7luO5z.s:430    .text:000000000000026c .L0 
     /tmp/cc7luO5z.s:432    .text:0000000000000270 .L0 
     /tmp/cc7luO5z.s:433    .text:0000000000000270 .L0 
     /tmp/cc7luO5z.s:435    .text:0000000000000274 .L0 
     /tmp/cc7luO5z.s:438    .text:000000000000027c .L0 
     /tmp/cc7luO5z.s:439    .text:000000000000027c .L0 
     /tmp/cc7luO5z.s:442    .text:0000000000000280 .L0 
     /tmp/cc7luO5z.s:444    .text:0000000000000284 .L0 
     /tmp/cc7luO5z.s:445    .text:0000000000000284 .L0 
     /tmp/cc7luO5z.s:454    .text:0000000000000294 .L0 
     /tmp/cc7luO5z.s:459    .text:000000000000029c .L0 
     /tmp/cc7luO5z.s:466    .text:00000000000002a8 .L0 
     /tmp/cc7luO5z.s:476    .text:00000000000002c0 .L0 
     /tmp/cc7luO5z.s:478    .text:00000000000002c8 .L0 
     /tmp/cc7luO5z.s:480    .text:00000000000002cc .L0 
     /tmp/cc7luO5z.s:481    .text:00000000000002cc .L0 
     /tmp/cc7luO5z.s:483    .text:00000000000002d0 .L0 
     /tmp/cc7luO5z.s:486    .text:00000000000002d4 .L0 
     /tmp/cc7luO5z.s:488    .text:00000000000002d8 .L0 
     /tmp/cc7luO5z.s:491    .text:00000000000002dc .L0 
     /tmp/cc7luO5z.s:494    .text:00000000000002e0 .L0 
     /tmp/cc7luO5z.s:496    .text:00000000000002e4 .L0 
     /tmp/cc7luO5z.s:522    .text:00000000000002e4 _ZN3TCB12threadCreateEPPS_PFvPvES2_S2_
     /tmp/cc7luO5z.s:525    .text:00000000000002e4 .L0 
     /tmp/cc7luO5z.s:527    .text:00000000000002e4 .L0 
     /tmp/cc7luO5z.s:528    .text:00000000000002e8 .L0 
     /tmp/cc7luO5z.s:532    .text:00000000000002f4 .L0 
     /tmp/cc7luO5z.s:533    .text:00000000000002f4 .L0 
     /tmp/cc7luO5z.s:534    .text:00000000000002f4 .L0 
     /tmp/cc7luO5z.s:536    .text:00000000000002f8 .L0 
     /tmp/cc7luO5z.s:543    .text:0000000000000304 .L0 
     /tmp/cc7luO5z.s:544    .text:0000000000000304 .L0 
     /tmp/cc7luO5z.s:549    .text:0000000000000310 .L0 
     /tmp/cc7luO5z.s:551    .text:0000000000000314 .L0 
     /tmp/cc7luO5z.s:552    .text:0000000000000314 .L0 
     /tmp/cc7luO5z.s:554    .text:000000000000031c .L0 
     /tmp/cc7luO5z.s:556    .text:0000000000000320 .L0 
     /tmp/cc7luO5z.s:557    .text:0000000000000320 .L0 
     /tmp/cc7luO5z.s:559    .text:0000000000000324 .L0 
     /tmp/cc7luO5z.s:562    .text:0000000000000328 .L0 
     /tmp/cc7luO5z.s:564    .text:000000000000032c .L0 
     /tmp/cc7luO5z.s:570    .text:000000000000032c _ZN3TCBnaEm
     /tmp/cc7luO5z.s:573    .text:000000000000032c .L0 
     /tmp/cc7luO5z.s:575    .text:000000000000032c .L0 
     /tmp/cc7luO5z.s:576    .text:0000000000000330 .L0 
     /tmp/cc7luO5z.s:579    .text:0000000000000338 .L0 
     /tmp/cc7luO5z.s:580    .text:0000000000000338 .L0 
     /tmp/cc7luO5z.s:582    .text:000000000000033c .L0 
     /tmp/cc7luO5z.s:584    .text:000000000000033c .L0 
     /tmp/cc7luO5z.s:585    .text:000000000000033c .L0 
     /tmp/cc7luO5z.s:590    .text:000000000000034c .L0 
     /tmp/cc7luO5z.s:592    .text:0000000000000350 .L0 
     /tmp/cc7luO5z.s:594    .text:0000000000000354 .L0 
     /tmp/cc7luO5z.s:598    .text:0000000000000358 .L0 
     /tmp/cc7luO5z.s:599    .text:0000000000000358 .L0 
     /tmp/cc7luO5z.s:602    .text:0000000000000360 .L0 
     /tmp/cc7luO5z.s:603    .text:0000000000000364 .L0 
GAS LISTING /tmp/cc7luO5z.s 			page 25


     /tmp/cc7luO5z.s:604    .text:0000000000000364 .L0 
     /tmp/cc7luO5z.s:606    .text:0000000000000368 .L0 
     /tmp/cc7luO5z.s:607    .text:0000000000000368 .L0 
     /tmp/cc7luO5z.s:609    .text:000000000000036c .L0 
     /tmp/cc7luO5z.s:613    .text:0000000000000370 .L0 
     /tmp/cc7luO5z.s:615    .text:0000000000000370 .L0 
     /tmp/cc7luO5z.s:617    .text:0000000000000374 .L0 
     /tmp/cc7luO5z.s:619    .text:000000000000037c .L0 
     /tmp/cc7luO5z.s:625    .text:000000000000037c _ZN3TCBdaEPv
     /tmp/cc7luO5z.s:628    .text:000000000000037c .L0 
     /tmp/cc7luO5z.s:630    .text:000000000000037c .L0 
     /tmp/cc7luO5z.s:631    .text:0000000000000380 .L0 
     /tmp/cc7luO5z.s:634    .text:0000000000000388 .L0 
     /tmp/cc7luO5z.s:635    .text:0000000000000388 .L0 
     /tmp/cc7luO5z.s:637    .text:000000000000038c .L0 
     /tmp/cc7luO5z.s:639    .text:000000000000038c .L0 
     /tmp/cc7luO5z.s:640    .text:000000000000038c .L0 
     /tmp/cc7luO5z.s:643    .text:0000000000000394 .L0 
     /tmp/cc7luO5z.s:644    .text:0000000000000398 .L0 
     /tmp/cc7luO5z.s:646    .text:000000000000039c .L0 
     /tmp/cc7luO5z.s:647    .text:000000000000039c .L0 
     /tmp/cc7luO5z.s:649    .text:00000000000003a0 .L0 
     /tmp/cc7luO5z.s:651    .text:00000000000003a4 .L0 
     /tmp/cc7luO5z.s:673    .bss:0000000000000008 _ZN3TCB16timeSliceCounterE
     /tmp/cc7luO5z.s:662    .data:0000000000000000 _ZN3TCB3cntE
     /tmp/cc7luO5z.s:669    .bss:0000000000000000 _ZN3TCB7runningE
     /tmp/cc7luO5z.s:659    .data:0000000000000000 .LANCHOR1
     /tmp/cc7luO5z.s:666    .bss:0000000000000000 .LANCHOR0
     /tmp/cc7luO5z.s:681    .text:00000000000003a4 .L0 
     /tmp/cc7luO5z.s:22     .text:000000000000000c .L0 
     /tmp/cc7luO5z.s:115    .text:000000000000006c .L0 
     /tmp/cc7luO5z.s:142    .text:000000000000008c .L0 
     /tmp/cc7luO5z.s:201    .text:00000000000000e4 .L0 
     /tmp/cc7luO5z.s:224    .text:0000000000000104 .L0 
     /tmp/cc7luO5z.s:287    .text:000000000000016c .L0 
     /tmp/cc7luO5z.s:406    .text:0000000000000220 .L0 
     /tmp/cc7luO5z.s:425    .text:0000000000000258 .L0 
     /tmp/cc7luO5z.s:585    .text:000000000000033c .L0 
     /tmp/cc7luO5z.s:58     .text:0000000000000034 .L3
     /tmp/cc7luO5z.s:49     .text:0000000000000028 .L2
     /tmp/cc7luO5z.s:133    .text:0000000000000084 .L8
     /tmp/cc7luO5z.s:218    .text:00000000000000fc .L11
     /tmp/cc7luO5z.s:258    .text:000000000000014c .L13
     /tmp/cc7luO5z.s:314    .text:00000000000001a0 .L15
     /tmp/cc7luO5z.s:297    .text:0000000000000188 .L16
     /tmp/cc7luO5z.s:452    .text:0000000000000294 .L30
     /tmp/cc7luO5z.s:457    .text:000000000000029c .L27
     /tmp/cc7luO5z.s:440    .text:0000000000000280 .L23
     /tmp/cc7luO5z.s:474    .text:00000000000002c0 .L20
     /tmp/cc7luO5z.s:403    .text:000000000000021c .L21
     /tmp/cc7luO5z.s:413    .text:0000000000000238 .L22
     /tmp/cc7luO5z.s:612    .text:0000000000000370 .L34
     /tmp/cc7luO5z.s:595    .text:0000000000000358 .L35
     /tmp/cc7luO5z.s:389    .text:0000000000000204 .LEHB0
     /tmp/cc7luO5z.s:360    .text:00000000000001d4 .LFB44
     /tmp/cc7luO5z.s:392    .text:000000000000020c .LEHE0
     /tmp/cc7luO5z.s:446    .text:0000000000000288 .LEHB1
GAS LISTING /tmp/cc7luO5z.s 			page 26


     /tmp/cc7luO5z.s:449    .text:0000000000000290 .LEHE1
     /tmp/cc7luO5z.s:461    .text:00000000000002a4 .L28
     /tmp/cc7luO5z.s:470    .text:00000000000002b8 .LEHB2
     /tmp/cc7luO5z.s:473    .text:00000000000002c0 .LEHE2
     /tmp/cc7luO5z.s:2180   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc7luO5z.s:3880   .debug_str:00000000000007ea .LASF149
     /tmp/cc7luO5z.s:3730   .debug_str:0000000000000379 .LASF150
     /tmp/cc7luO5z.s:3808   .debug_str:0000000000000603 .LASF151
     /tmp/cc7luO5z.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc7luO5z.s:676    .text:00000000000003a4 .Letext0
     /tmp/cc7luO5z.s:3620   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc7luO5z.s:3732   .debug_str:0000000000000385 .LASF0
     /tmp/cc7luO5z.s:3754   .debug_str:000000000000042f .LASF1
     /tmp/cc7luO5z.s:3824   .debug_str:000000000000066f .LASF2
     /tmp/cc7luO5z.s:3832   .debug_str:00000000000006bb .LASF4
     /tmp/cc7luO5z.s:3742   .debug_str:00000000000003bf .LASF3
     /tmp/cc7luO5z.s:3632   .debug_str:000000000000005a .LASF5
     /tmp/cc7luO5z.s:3800   .debug_str:000000000000059f .LASF6
     /tmp/cc7luO5z.s:3748   .debug_str:0000000000000404 .LASF7
     /tmp/cc7luO5z.s:3706   .debug_str:0000000000000293 .LASF8
     /tmp/cc7luO5z.s:3714   .debug_str:00000000000002ec .LASF9
     /tmp/cc7luO5z.s:3658   .debug_str:0000000000000134 .LASF10
     /tmp/cc7luO5z.s:3696   .debug_str:0000000000000255 .LASF11
     /tmp/cc7luO5z.s:3672   .debug_str:0000000000000188 .LASF12
     /tmp/cc7luO5z.s:3656   .debug_str:0000000000000124 .LASF13
     /tmp/cc7luO5z.s:3864   .debug_str:0000000000000791 .LASF14
     /tmp/cc7luO5z.s:3686   .debug_str:00000000000001eb .LASF15
     /tmp/cc7luO5z.s:3852   .debug_str:0000000000000736 .LASF16
     /tmp/cc7luO5z.s:3704   .debug_str:0000000000000289 .LASF18
     /tmp/cc7luO5z.s:3872   .debug_str:00000000000007b9 .LASF61
     /tmp/cc7luO5z.s:3936   .debug_str:00000000000009fb .LASF152
     /tmp/cc7luO5z.s:3722   .debug_str:000000000000032e .LASF52
     /tmp/cc7luO5z.s:3856   .debug_str:0000000000000764 .LASF17
     /tmp/cc7luO5z.s:3764   .debug_str:0000000000000476 .LASF38
     /tmp/cc7luO5z.s:3908   .debug_str:0000000000000974 .LASF153
     /tmp/cc7luO5z.s:3868   .debug_str:00000000000007a6 .LASF154
     /tmp/cc7luO5z.s:3834   .debug_str:00000000000006c2 .LASF19
     /tmp/cc7luO5z.s:3630   .debug_str:000000000000004e .LASF21
     /tmp/cc7luO5z.s:3870   .debug_str:00000000000007ae .LASF23
     /tmp/cc7luO5z.s:3780   .debug_str:000000000000050c .LASF25
     /tmp/cc7luO5z.s:3646   .debug_str:00000000000000cd .LASF20
     /tmp/cc7luO5z.s:3892   .debug_str:00000000000008f6 .LASF22
     /tmp/cc7luO5z.s:3828   .debug_str:000000000000068a .LASF24
     /tmp/cc7luO5z.s:3652   .debug_str:00000000000000f7 .LASF26
     /tmp/cc7luO5z.s:3874   .debug_str:00000000000007ca .LASF27
     /tmp/cc7luO5z.s:3692   .debug_str:0000000000000228 .LASF28
     /tmp/cc7luO5z.s:3926   .debug_str:00000000000009b9 .LASF29
     /tmp/cc7luO5z.s:3642   .debug_str:00000000000000ab .LASF30
     /tmp/cc7luO5z.s:3758   .debug_str:0000000000000448 .LASF31
     /tmp/cc7luO5z.s:3900   .debug_str:000000000000092d .LASF32
     /tmp/cc7luO5z.s:3862   .debug_str:0000000000000784 .LASF33
     /tmp/cc7luO5z.s:3716   .debug_str:00000000000002fa .LASF34
     /tmp/cc7luO5z.s:3794   .debug_str:0000000000000579 .LASF155
     /tmp/cc7luO5z.s:3844   .debug_str:0000000000000700 .LASF35
     /tmp/cc7luO5z.s:3830   .debug_str:0000000000000694 .LASF36
     /tmp/cc7luO5z.s:3772   .debug_str:00000000000004bf .LASF37
     /tmp/cc7luO5z.s:3694   .debug_str:000000000000023e .LASF39
GAS LISTING /tmp/cc7luO5z.s 			page 27


     /tmp/cc7luO5z.s:3756   .debug_str:0000000000000442 .LASF48
     /tmp/cc7luO5z.s:3882   .debug_str:00000000000008ae .LASF50
     /tmp/cc7luO5z.s:3876   .debug_str:00000000000007d5 .LASF136
     /tmp/cc7luO5z.s:3942   .debug_str:0000000000000a2d .LASF40
     /tmp/cc7luO5z.s:3708   .debug_str:00000000000002a3 .LASF41
     /tmp/cc7luO5z.s:3650   .debug_str:00000000000000e7 .LASF42
     /tmp/cc7luO5z.s:3702   .debug_str:000000000000027d .LASF43
     /tmp/cc7luO5z.s:3624   .debug_str:0000000000000005 .LASF44
     /tmp/cc7luO5z.s:3768   .debug_str:00000000000004a6 .LASF46
     /tmp/cc7luO5z.s:3850   .debug_str:0000000000000723 .LASF45
     /tmp/cc7luO5z.s:3826   .debug_str:000000000000067d .LASF47
     /tmp/cc7luO5z.s:3682   .debug_str:00000000000001dc .LASF49
     /tmp/cc7luO5z.s:3668   .debug_str:0000000000000170 .LASF51
     /tmp/cc7luO5z.s:3790   .debug_str:000000000000054f .LASF53
     /tmp/cc7luO5z.s:3622   .debug_str:0000000000000000 .LASF54
     /tmp/cc7luO5z.s:3938   .debug_str:0000000000000a0f .LASF55
     /tmp/cc7luO5z.s:3888   .debug_str:00000000000008d9 .LASF56
     /tmp/cc7luO5z.s:3884   .debug_str:00000000000008be .LASF57
     /tmp/cc7luO5z.s:3866   .debug_str:000000000000079d .LASF58
     /tmp/cc7luO5z.s:3786   .debug_str:0000000000000532 .LASF59
     /tmp/cc7luO5z.s:3846   .debug_str:000000000000070d .LASF60
     /tmp/cc7luO5z.s:3648   .debug_str:00000000000000d9 .LASF122
     /tmp/cc7luO5z.s:3760   .debug_str:0000000000000455 .LASF124
     /tmp/cc7luO5z.s:3674   .debug_str:0000000000000198 .LASF156
     /tmp/cc7luO5z.s:3628   .debug_str:0000000000000026 .LASF157
     /tmp/cc7luO5z.s:3842   .debug_str:00000000000006ef .LASF62
     /tmp/cc7luO5z.s:3928   .debug_str:00000000000009bf .LASF158
     /tmp/cc7luO5z.s:3816   .debug_str:000000000000064f .LASF63
     /tmp/cc7luO5z.s:3910   .debug_str:000000000000097e .LASF64
     /tmp/cc7luO5z.s:3902   .debug_str:0000000000000946 .LASF159
     /tmp/cc7luO5z.s:3690   .debug_str:000000000000021c .LASF65
     /tmp/cc7luO5z.s:3878   .debug_str:00000000000007dd .LASF66
     /tmp/cc7luO5z.s:3676   .debug_str:00000000000001a6 .LASF67
     /tmp/cc7luO5z.s:3740   .debug_str:00000000000003b9 .LASF68
     /tmp/cc7luO5z.s:3792   .debug_str:0000000000000567 .LASF69
     /tmp/cc7luO5z.s:3718   .debug_str:000000000000031d .LASF70
     /tmp/cc7luO5z.s:3728   .debug_str:0000000000000361 .LASF71
     /tmp/cc7luO5z.s:3894   .debug_str:000000000000090d .LASF72
     /tmp/cc7luO5z.s:3890   .debug_str:00000000000008e1 .LASF73
     /tmp/cc7luO5z.s:3820   .debug_str:000000000000065b .LASF74
     /tmp/cc7luO5z.s:3788   .debug_str:000000000000053a .LASF75
     /tmp/cc7luO5z.s:3810   .debug_str:0000000000000621 .LASF76
     /tmp/cc7luO5z.s:3812   .debug_str:0000000000000628 .LASF77
     /tmp/cc7luO5z.s:3784   .debug_str:000000000000052b .LASF78
     /tmp/cc7luO5z.s:3750   .debug_str:0000000000000417 .LASF79
     /tmp/cc7luO5z.s:3924   .debug_str:00000000000009b1 .LASF80
     /tmp/cc7luO5z.s:3860   .debug_str:0000000000000770 .LASF81
     /tmp/cc7luO5z.s:3782   .debug_str:0000000000000523 .LASF82
     /tmp/cc7luO5z.s:3698   .debug_str:0000000000000264 .LASF83
     /tmp/cc7luO5z.s:3762   .debug_str:000000000000046e .LASF84
     /tmp/cc7luO5z.s:3814   .debug_str:000000000000063b .LASF85
     /tmp/cc7luO5z.s:3946   .debug_str:0000000000000a55 .LASF86
     /tmp/cc7luO5z.s:3738   .debug_str:00000000000003a5 .LASF87
     /tmp/cc7luO5z.s:3858   .debug_str:0000000000000769 .LASF88
     /tmp/cc7luO5z.s:3836   .debug_str:00000000000006c7 .LASF89
     /tmp/cc7luO5z.s:3838   .debug_str:00000000000006da .LASF90
     /tmp/cc7luO5z.s:3664   .debug_str:0000000000000152 .LASF91
GAS LISTING /tmp/cc7luO5z.s 			page 28


     /tmp/cc7luO5z.s:3684   .debug_str:00000000000001e5 .LASF92
     /tmp/cc7luO5z.s:3724   .debug_str:0000000000000346 .LASF93
     /tmp/cc7luO5z.s:3736   .debug_str:000000000000039f .LASF94
     /tmp/cc7luO5z.s:3680   .debug_str:00000000000001ca .LASF95
     /tmp/cc7luO5z.s:3634   .debug_str:0000000000000061 .LASF96
     /tmp/cc7luO5z.s:3854   .debug_str:000000000000074c .LASF97
     /tmp/cc7luO5z.s:3822   .debug_str:0000000000000664 .LASF98
     /tmp/cc7luO5z.s:3940   .debug_str:0000000000000a15 .LASF99
     /tmp/cc7luO5z.s:3912   .debug_str:0000000000000984 .LASF100
     /tmp/cc7luO5z.s:3930   .debug_str:00000000000009ca .LASF101
     /tmp/cc7luO5z.s:3662   .debug_str:0000000000000148 .LASF102
     /tmp/cc7luO5z.s:3774   .debug_str:00000000000004cb .LASF103
     /tmp/cc7luO5z.s:3922   .debug_str:00000000000009a2 .LASF104
     /tmp/cc7luO5z.s:3712   .debug_str:00000000000002d0 .LASF105
     /tmp/cc7luO5z.s:3840   .debug_str:00000000000006e1 .LASF106
     /tmp/cc7luO5z.s:3688   .debug_str:0000000000000201 .LASF107
     /tmp/cc7luO5z.s:3734   .debug_str:0000000000000392 .LASF108
     /tmp/cc7luO5z.s:3904   .debug_str:0000000000000955 .LASF109
     /tmp/cc7luO5z.s:3914   .debug_str:000000000000098e .LASF110
     /tmp/cc7luO5z.s:3796   .debug_str:000000000000057e .LASF111
     /tmp/cc7luO5z.s:3916   .debug_str:0000000000000993 .LASF112
     /tmp/cc7luO5z.s:3744   .debug_str:00000000000003d1 .LASF113
     /tmp/cc7luO5z.s:3918   .debug_str:0000000000000998 .LASF114
     /tmp/cc7luO5z.s:3626   .debug_str:0000000000000015 .LASF115
     /tmp/cc7luO5z.s:3920   .debug_str:000000000000099d .LASF116
     /tmp/cc7luO5z.s:3950   .debug_str:0000000000000a68 .LASF117
     /tmp/cc7luO5z.s:3670   .debug_str:0000000000000183 .LASF118
     /tmp/cc7luO5z.s:3886   .debug_str:00000000000008c8 .LASF119
     /tmp/cc7luO5z.s:3848   .debug_str:0000000000000715 .LASF120
     /tmp/cc7luO5z.s:3766   .debug_str:000000000000048b .LASF121
     /tmp/cc7luO5z.s:3804   .debug_str:00000000000005bd .LASF123
     /tmp/cc7luO5z.s:3746   .debug_str:00000000000003e2 .LASF125
     /tmp/cc7luO5z.s:3798   .debug_str:000000000000058f .LASF126
     /tmp/cc7luO5z.s:3818   .debug_str:0000000000000654 .LASF160
     /tmp/cc7luO5z.s:3770   .debug_str:00000000000004b3 .LASF127
     /tmp/cc7luO5z.s:3660   .debug_str:0000000000000143 .LASF128
     /tmp/cc7luO5z.s:3640   .debug_str:00000000000000a6 .LASF129
     /tmp/cc7luO5z.s:3776   .debug_str:00000000000004e1 .LASF130
     /tmp/cc7luO5z.s:3636   .debug_str:000000000000006c .LASF131
     /tmp/cc7luO5z.s:3726   .debug_str:0000000000000358 .LASF132
     /tmp/cc7luO5z.s:3778   .debug_str:00000000000004eb .LASF133
     /tmp/cc7luO5z.s:3898   .debug_str:0000000000000923 .LASF134
     /tmp/cc7luO5z.s:3710   .debug_str:00000000000002af .LASF135
     /tmp/cc7luO5z.s:3932   .debug_str:00000000000009e0 .LASF137
     /tmp/cc7luO5z.s:3802   .debug_str:00000000000005b2 .LASF138
     /tmp/cc7luO5z.s:3638   .debug_str:000000000000008d .LASF139
     /tmp/cc7luO5z.s:3666   .debug_str:0000000000000165 .LASF161
     /tmp/cc7luO5z.s:3806   .debug_str:00000000000005d2 .LASF162
     /tmp/cc7luO5z.s:3644   .debug_str:00000000000000bc .LASF140
     /tmp/cc7luO5z.s:3896   .debug_str:0000000000000916 .LASF141
     /tmp/cc7luO5z.s:3944   .debug_str:0000000000000a3a .LASF142
     /tmp/cc7luO5z.s:626    .text:000000000000037c .LFB53
     /tmp/cc7luO5z.s:652    .text:00000000000003a4 .LFE53
     /tmp/cc7luO5z.s:3268   .debug_loc:0000000000000000 .LLST22
     /tmp/cc7luO5z.s:641    .text:0000000000000394 .LVL52
     /tmp/cc7luO5z.s:571    .text:000000000000032c .LFB52
     /tmp/cc7luO5z.s:620    .text:000000000000037c .LFE52
GAS LISTING /tmp/cc7luO5z.s 			page 29


     /tmp/cc7luO5z.s:3752   .debug_str:000000000000042a .LASF143
     /tmp/cc7luO5z.s:3282   .debug_loc:0000000000000039 .LLST21
     /tmp/cc7luO5z.s:600    .text:0000000000000360 .LVL49
     /tmp/cc7luO5z.s:328    .text:00000000000001ac .LFB51
     /tmp/cc7luO5z.s:354    .text:00000000000001d4 .LFE51
     /tmp/cc7luO5z.s:3307   .debug_loc:000000000000009b .LLST9
     /tmp/cc7luO5z.s:343    .text:00000000000001c4 .LVL26
     /tmp/cc7luO5z.s:273    .text:000000000000015c .LFB50
     /tmp/cc7luO5z.s:322    .text:00000000000001ac .LFE50
     /tmp/cc7luO5z.s:3321   .debug_loc:00000000000000d4 .LLST8
     /tmp/cc7luO5z.s:302    .text:0000000000000190 .LVL23
     /tmp/cc7luO5z.s:100    .text:0000000000000058 .LFB49
     /tmp/cc7luO5z.s:178    .text:00000000000000cc .LFE49
     /tmp/cc7luO5z.s:121    .text:000000000000007c .LBB16
     /tmp/cc7luO5z.s:135    .text:0000000000000084 .LBE16
     /tmp/cc7luO5z.s:3346   .debug_loc:0000000000000136 .LLST3
     /tmp/cc7luO5z.s:153    .text:00000000000000a8 .LBB18
     /tmp/cc7luO5z.s:161    .text:00000000000000b0 .LBE18
     /tmp/cc7luO5z.s:3355   .debug_loc:000000000000015c .LLST4
     /tmp/cc7luO5z.s:3363   .debug_loc:0000000000000180 .LLST5
     /tmp/cc7luO5z.s:139    .text:000000000000008c .LVL6
     /tmp/cc7luO5z.s:165    .text:00000000000000b8 .LVL10
     /tmp/cc7luO5z.s:184    .text:00000000000000cc .LFB48
     /tmp/cc7luO5z.s:267    .text:000000000000015c .LFE48
     /tmp/cc7luO5z.s:3370   .debug_loc:00000000000001a3 .LLST6
     /tmp/cc7luO5z.s:204    .text:00000000000000ec .LBB20
     /tmp/cc7luO5z.s:211    .text:00000000000000f0 .LBE20
     /tmp/cc7luO5z.s:3381   .debug_loc:00000000000001d9 .LLST7
     /tmp/cc7luO5z.s:222    .text:0000000000000104 .LVL13
     /tmp/cc7luO5z.s:229    .text:0000000000000118 .LVL14
     /tmp/cc7luO5z.s:237    .text:000000000000012c .LVL15
     /tmp/cc7luO5z.s:241    .text:0000000000000134 .LVL16
     /tmp/cc7luO5z.s:264    .text:0000000000000158 .LVL19
     /tmp/cc7luO5z.s:70     .text:000000000000003c .LFB47
     /tmp/cc7luO5z.s:94     .text:0000000000000058 .LFE47
     /tmp/cc7luO5z.s:10     .text:0000000000000000 .LFB46
     /tmp/cc7luO5z.s:64     .text:000000000000003c .LFE46
     /tmp/cc7luO5z.s:24     .text:0000000000000014 .LBB12
     /tmp/cc7luO5z.s:32     .text:0000000000000018 .LBE12
     /tmp/cc7luO5z.s:3388   .debug_loc:00000000000001fc .LLST0
     /tmp/cc7luO5z.s:37     .text:000000000000001c .LBB14
     /tmp/cc7luO5z.s:45     .text:0000000000000024 .LBE14
     /tmp/cc7luO5z.s:3395   .debug_loc:000000000000021f .LLST1
     /tmp/cc7luO5z.s:3403   .debug_loc:0000000000000243 .LLST2
     /tmp/cc7luO5z.s:523    .text:00000000000002e4 .LFB45
     /tmp/cc7luO5z.s:565    .text:000000000000032c .LFE45
     /tmp/cc7luO5z.s:3952   .debug_str:0000000000000a79 .LASF144
     /tmp/cc7luO5z.s:3410   .debug_loc:0000000000000266 .LLST17
     /tmp/cc7luO5z.s:3428   .debug_loc:00000000000002b2 .LLST18
     /tmp/cc7luO5z.s:3446   .debug_loc:00000000000002fe .LLST19
     /tmp/cc7luO5z.s:3948   .debug_str:0000000000000a5d .LASF145
     /tmp/cc7luO5z.s:3464   .debug_loc:000000000000034a .LLST20
     /tmp/cc7luO5z.s:547    .text:0000000000000310 .LVL44
     /tmp/cc7luO5z.s:497    .text:00000000000002e4 .LFE44
     /tmp/cc7luO5z.s:3478   .debug_loc:0000000000000383 .LLST10
     /tmp/cc7luO5z.s:3496   .debug_loc:00000000000003cf .LLST11
     /tmp/cc7luO5z.s:3514   .debug_loc:000000000000041b .LLST12
GAS LISTING /tmp/cc7luO5z.s 			page 30


     /tmp/cc7luO5z.s:395    .text:0000000000000210 .LBB25
     /tmp/cc7luO5z.s:464    .text:00000000000002a8 .LBE25
     /tmp/cc7luO5z.s:3543   .debug_loc:0000000000000490 .LLST13
     /tmp/cc7luO5z.s:3568   .debug_loc:00000000000004f2 .LLST14
     /tmp/cc7luO5z.s:3582   .debug_loc:000000000000052b .LLST15
     /tmp/cc7luO5z.s:3596   .debug_loc:0000000000000564 .LLST16
     /tmp/cc7luO5z.s:448    .text:0000000000000290 .LVL32
     /tmp/cc7luO5z.s:391    .text:000000000000020c .LVL29
     /tmp/cc7luO5z.s:468    .text:00000000000002b4 .LVL35
     /tmp/cc7luO5z.s:472    .text:00000000000002c0 .LVL36
     /tmp/cc7luO5z.s:3906   .debug_str:000000000000096f .LASF146
     /tmp/cc7luO5z.s:3700   .debug_str:0000000000000278 .LASF147
     /tmp/cc7luO5z.s:3654   .debug_str:000000000000010c .LASF163
     /tmp/cc7luO5z.s:3720   .debug_str:0000000000000328 .LASF148
     /tmp/cc7luO5z.s:3934   .debug_str:00000000000009ec .LASF164
     /tmp/cc7luO5z.s:3678   .debug_str:00000000000001b2 .LASF165
     /tmp/cc7luO5z.s:629    .text:000000000000037c .LVL51
     /tmp/cc7luO5z.s:574    .text:000000000000032c .LVL46
     /tmp/cc7luO5z.s:588    .text:000000000000034c .LVL47
     /tmp/cc7luO5z.s:596    .text:0000000000000358 .LVL48
     /tmp/cc7luO5z.s:611    .text:0000000000000370 .LVL50
     /tmp/cc7luO5z.s:331    .text:00000000000001ac .LVL25
     /tmp/cc7luO5z.s:276    .text:000000000000015c .LVL20
     /tmp/cc7luO5z.s:290    .text:000000000000017c .LVL21
     /tmp/cc7luO5z.s:298    .text:0000000000000188 .LVL22
     /tmp/cc7luO5z.s:313    .text:00000000000001a0 .LVL24
     /tmp/cc7luO5z.s:120    .text:000000000000007c .LVL4
     /tmp/cc7luO5z.s:131    .text:0000000000000084 .LVL5
     /tmp/cc7luO5z.s:152    .text:00000000000000a8 .LVL8
     /tmp/cc7luO5z.s:159    .text:00000000000000b0 .LVL9
     /tmp/cc7luO5z.s:202    .text:00000000000000ec .LVL11
     /tmp/cc7luO5z.s:251    .text:0000000000000140 .LVL17
     /tmp/cc7luO5z.s:257    .text:000000000000014c .LVL18
     /tmp/cc7luO5z.s:209    .text:00000000000000f0 .LVL12
     /tmp/cc7luO5z.s:23     .text:0000000000000014 .LVL0
     /tmp/cc7luO5z.s:30     .text:0000000000000018 .LVL1
     /tmp/cc7luO5z.s:36     .text:000000000000001c .LVL2
     /tmp/cc7luO5z.s:43     .text:0000000000000024 .LVL3
     /tmp/cc7luO5z.s:526    .text:00000000000002e4 .LVL40
     /tmp/cc7luO5z.s:539    .text:0000000000000300 .LVL41
     /tmp/cc7luO5z.s:560    .text:0000000000000324 .LVL45
     /tmp/cc7luO5z.s:541    .text:0000000000000304 .LVL42
     /tmp/cc7luO5z.s:545    .text:0000000000000308 .LVL43
     /tmp/cc7luO5z.s:365    .text:00000000000001d4 .LVL27
     /tmp/cc7luO5z.s:388    .text:0000000000000204 .LVL28
     /tmp/cc7luO5z.s:489    .text:00000000000002d8 .LVL38
     /tmp/cc7luO5z.s:492    .text:00000000000002dc .LVL39
     /tmp/cc7luO5z.s:402    .text:000000000000021c .LVL31
     /tmp/cc7luO5z.s:451    .text:0000000000000294 .LVL33
     /tmp/cc7luO5z.s:455    .text:0000000000000298 .LVL34
     /tmp/cc7luO5z.s:394    .text:0000000000000210 .LVL30
     /tmp/cc7luO5z.s:484    .text:00000000000002d0 .LVL37
     /tmp/cc7luO5z.s:682    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc7luO5z.s:500    .gcc_except_table:0000000000000000 .LLSDA44

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
GAS LISTING /tmp/cc7luO5z.s 			page 31


_ZN9Scheduler3getEv
_ZN5Riscv13pushRegistersEv
_ZN3TCB13contextSwitchEPNS_7ContextES1_
_ZN5Riscv12popRegistersEv
_ZN9Scheduler3putEP3TCB
_ZN15MemoryAllocator10memSegSizeE
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_Unwind_Resume
__gxx_personality_v0
