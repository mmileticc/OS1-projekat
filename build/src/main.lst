GAS LISTING /tmp/ccHs2ZZR.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z14idleThreadBodyPv
   9              	_Z14idleThreadBodyPv:
  10              	.LFB47:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** //
   2:src/main.cpp  **** // Created by os on 6/22/24.
   3:src/main.cpp  **** //
   4:src/main.cpp  **** #include "../lib/hw.h"
   5:src/main.cpp  **** #include "../test/printing.hpp"
   6:src/main.cpp  **** #include "../h/quitQuemu.hpp"
   7:src/main.cpp  **** #include "../h/riscv.hpp"
   8:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   9:src/main.cpp  **** #include "../h/tcb.hpp"
  10:src/main.cpp  **** #include "../test/ConsumerProducer_CPP_Sync_API_test.hpp"
  11:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
  12:src/main.cpp  **** 
  13:src/main.cpp  **** 
  14:src/main.cpp  **** void userMain();
  15:src/main.cpp  **** 
  16:src/main.cpp  **** void idleThreadBody(void *){
  12              		.loc 1 16 28
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  22              	.L2:
  17:src/main.cpp  ****     while (true) {
  23              		.loc 1 17 5 discriminator 1
  18:src/main.cpp  ****         thread_dispatch();
  24              		.loc 1 18 9 discriminator 1
  25              		.loc 1 18 24 is_stmt 0 discriminator 1
  26 0010 97000000 		call	_Z15thread_dispatchv@plt
  26      E7800000 
  27              	.LVL0:
  17:src/main.cpp  ****     while (true) {
  28              		.loc 1 17 5 is_stmt 1 discriminator 1
  29 0018 6FF09FFF 		j	.L2
  30              		.cfi_endproc
  31              	.LFE47:
  33              		.align	2
  34              		.globl	_Z9wrapperUMPv
  36              	_Z9wrapperUMPv:
  37              	.LFB48:
  19:src/main.cpp  ****     }
  20:src/main.cpp  **** }
  21:src/main.cpp  **** 
GAS LISTING /tmp/ccHs2ZZR.s 			page 2


  22:src/main.cpp  **** void wrapperUM(void*){
  38              		.loc 1 22 22
  39              		.cfi_startproc
  40 001c 130101FF 		addi	sp,sp,-16
  41              		.cfi_def_cfa_offset 16
  42 0020 23341100 		sd	ra,8(sp)
  43 0024 23308100 		sd	s0,0(sp)
  44              		.cfi_offset 1, -8
  45              		.cfi_offset 8, -16
  46 0028 13040101 		addi	s0,sp,16
  47              		.cfi_def_cfa 8, 0
  23:src/main.cpp  ****     userMain();
  48              		.loc 1 23 5
  49              		.loc 1 23 13 is_stmt 0
  50 002c 97000000 		call	_Z8userMainv@plt
  50      E7800000 
  51              	.LVL1:
  24:src/main.cpp  **** }
  52              		.loc 1 24 1
  53 0034 83308100 		ld	ra,8(sp)
  54              		.cfi_restore 1
  55 0038 03340100 		ld	s0,0(sp)
  56              		.cfi_restore 8
  57              		.cfi_def_cfa 2, 16
  58 003c 13010101 		addi	sp,sp,16
  59              		.cfi_def_cfa_offset 0
  60 0040 67800000 		jr	ra
  61              		.cfi_endproc
  62              	.LFE48:
  64              		.align	2
  65              		.globl	_Z9quitQuemuv
  67              	_Z9quitQuemuv:
  68              	.LFB0:
  69              		.file 2 "src/../h/quitQuemu.hpp"
   1:src/../h/quitQuemu.hpp **** //
   2:src/../h/quitQuemu.hpp **** // Created by os on 6/21/24.
   3:src/../h/quitQuemu.hpp **** //
   4:src/../h/quitQuemu.hpp **** 
   5:src/../h/quitQuemu.hpp **** #ifndef PROJECT_BASE_V1_1_QUITQUEMU_HPP
   6:src/../h/quitQuemu.hpp **** #define PROJECT_BASE_V1_1_QUITQUEMU_HPP
   7:src/../h/quitQuemu.hpp **** #include "../lib/hw.h"
   8:src/../h/quitQuemu.hpp **** void quitQuemu(){
  70              		.loc 2 8 17 is_stmt 1
  71              		.cfi_startproc
  72 0044 130101FF 		addi	sp,sp,-16
  73              		.cfi_def_cfa_offset 16
  74 0048 23348100 		sd	s0,8(sp)
  75              		.cfi_offset 8, -8
  76 004c 13040101 		addi	s0,sp,16
  77              		.cfi_def_cfa 8, 0
   9:src/../h/quitQuemu.hpp ****     //zavrsavanje programa
  10:src/../h/quitQuemu.hpp ****     uint32 memLoc = 0x100000;
  78              		.loc 2 10 5
  79              	.LVL2:
  11:src/../h/quitQuemu.hpp ****     uint stopValue = 0x5555;
  80              		.loc 2 11 5
  12:src/../h/quitQuemu.hpp ****     __asm__ volatile("mv a1, %[broj] " : : [broj] "r" (memLoc));
GAS LISTING /tmp/ccHs2ZZR.s 			page 3


  81              		.loc 2 12 5
  82              		.loc 2 12 64 is_stmt 0
  83 0050 B7071000 		li	a5,1048576
  84              	#APP
  85              	# 12 "src/../h/quitQuemu.hpp" 1
  13              	    __asm__ volatile("mv a2, %[broj] " : : [broj] "r" (stopValue));
  86              		mv a1, a5 
  87              	# 0 "" 2
  88              		.loc 2 13 5 is_stmt 1
  89              		.loc 2 13 67 is_stmt 0
  90              	#NO_APP
  91 0058 B7570000 		li	a5,20480
  92 005c 9B875755 		addiw	a5,a5,1365
  93              	#APP
  94              	# 13 "src/../h/quitQuemu.hpp" 1
  14              	    __asm__ volatile("sw a2, 0(a1)");
  95              		mv a2, a5 
  96              	# 0 "" 2
  97              		.loc 2 14 5 is_stmt 1
  98              		.loc 2 14 37 is_stmt 0
  99              	# 14 "src/../h/quitQuemu.hpp" 1
  15              	}
 100              		sw a2, 0(a1)
 101              	# 0 "" 2
 102              		.loc 2 15 1
 103              	#NO_APP
 104 0068 03348100 		ld	s0,8(sp)
 105              		.cfi_restore 8
 106              		.cfi_def_cfa 2, 16
 107 006c 13010101 		addi	sp,sp,16
 108              		.cfi_def_cfa_offset 0
 109 0070 67800000 		jr	ra
 110              		.cfi_endproc
 111              	.LFE0:
 113              		.align	2
 114              		.globl	main
 116              	main:
 117              	.LFB49:
  25:src/main.cpp  **** TCB *userMainTCB;
  26:src/main.cpp  **** TCB *Main;
  27:src/main.cpp  **** int main(){
 118              		.loc 1 27 11 is_stmt 1
 119              		.cfi_startproc
 120              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 121              		.cfi_lsda 0x1b,.LLSDA49
 122 0074 130101FC 		addi	sp,sp,-64
 123              		.cfi_def_cfa_offset 64
 124 0078 233C1102 		sd	ra,56(sp)
 125 007c 23388102 		sd	s0,48(sp)
 126 0080 23349102 		sd	s1,40(sp)
 127              		.cfi_offset 1, -8
 128              		.cfi_offset 8, -16
 129              		.cfi_offset 9, -24
 130 0084 13040104 		addi	s0,sp,64
 131              		.cfi_def_cfa 8, 0
  28:src/main.cpp  ****     MemoryAllocator::initilaze();
 132              		.loc 1 28 5
GAS LISTING /tmp/ccHs2ZZR.s 			page 4


 133              	.LEHB0:
 134              		.loc 1 28 31 is_stmt 0
 135 0088 97000000 		call	_ZN15MemoryAllocator9initilazeEv@plt
 135      E7800000 
 136              	.LVL3:
  29:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 137              		.loc 1 29 5 is_stmt 1
 138              		.loc 1 29 19 is_stmt 0
 139 0090 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 139      83B70700 
 140              	.LVL4:
 141              	.LBB6:
 142              	.LBB7:
 143              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by marko on 20.4.22..
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   6:src/../h/riscv.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv
  11:src/../h/riscv.hpp **** {
  12:src/../h/riscv.hpp **** public:
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     static void popA0();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  17:src/../h/riscv.hpp ****     static void popSppSpie();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // read register scause
  20:src/../h/riscv.hpp ****     static uint64 r_scause();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // write register scause
  23:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register sepc
  26:src/../h/riscv.hpp ****     static uint64 r_sepc();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register sepc
  29:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register stvec
  32:src/../h/riscv.hpp ****     static uint64 r_stvec();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register stvec
  35:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // read register stval
  38:src/../h/riscv.hpp ****     static uint64 r_stval();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // write register stval
  41:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     enum BitMaskSip
GAS LISTING /tmp/ccHs2ZZR.s 			page 5


  44:src/../h/riscv.hpp ****     {
  45:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  46:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  47:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  48:src/../h/riscv.hpp ****     };
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // mask set register sip
  51:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // mask clear register sip
  54:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // read register sip
  57:src/../h/riscv.hpp ****     static uint64 r_sip();
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     // write register sip
  60:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     enum BitMaskSstatus
  63:src/../h/riscv.hpp ****     {
  64:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  65:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  66:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  67:src/../h/riscv.hpp ****     };
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // mask set register sstatus
  70:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // mask clear register sstatus
  73:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // read register sstatus
  76:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // write register sstatus
  79:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // supervisor trap
  82:src/../h/riscv.hpp ****     static void supervisorTrap();
  83:src/../h/riscv.hpp **** 
  84:src/../h/riscv.hpp ****     static void pushRegisters();
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp ****     static void popRegisters();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** // read register ao
  90:src/../h/riscv.hpp ****     static uint64 r_a0();
  91:src/../h/riscv.hpp **** // read register a1
  92:src/../h/riscv.hpp ****     static uint64 r_a1();
  93:src/../h/riscv.hpp **** // read register a2
  94:src/../h/riscv.hpp ****     static uint64 r_a2();
  95:src/../h/riscv.hpp **** // read register a3
  96:src/../h/riscv.hpp ****     static uint64 r_a3();
  97:src/../h/riscv.hpp **** // read register a4
  98:src/../h/riscv.hpp ****     static uint64 r_a4();
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccHs2ZZR.s 			page 6


 101:src/../h/riscv.hpp ****     //system id codes enum
 102:src/../h/riscv.hpp ****     enum sysId{
 103:src/../h/riscv.hpp ****         memAlloc = 0x01,
 104:src/../h/riscv.hpp ****         memFree = 0x02,
 105:src/../h/riscv.hpp ****         threadCreate = 0x11,
 106:src/../h/riscv.hpp ****         threadExit = 0x12,
 107:src/../h/riscv.hpp ****         threadDispatch = 0x13,
 108:src/../h/riscv.hpp ****         semOpen = 0x21,
 109:src/../h/riscv.hpp ****         semClose = 0x22,
 110:src/../h/riscv.hpp ****         semWait = 0x23,
 111:src/../h/riscv.hpp ****         semSignal = 0x24,
 112:src/../h/riscv.hpp ****         semTrywait = 0x26,
 113:src/../h/riscv.hpp ****         //------------------ za 20p
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp ****         semTimedwait = 0x25,
 116:src/../h/riscv.hpp ****         timeSleat = 0x31,
 117:src/../h/riscv.hpp ****         getC = 0x41,
 118:src/../h/riscv.hpp ****         putC = 0x42
 119:src/../h/riscv.hpp ****     };
 120:src/../h/riscv.hpp ****     static void sysCallWraper(...);
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** private:
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp ****     // supervisor trap handler
 125:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** };
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     uint64 volatile scause;
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 135:src/../h/riscv.hpp ****     return scause;
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** 
 138:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 139:src/../h/riscv.hpp **** {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     uint64 volatile sepc;
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 147:src/../h/riscv.hpp ****     return sepc;
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccHs2ZZR.s 			page 7


 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 159:src/../h/riscv.hpp ****     return stvec;
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 144              		.loc 3 164 5 is_stmt 1
 145              		.loc 3 164 69 is_stmt 0
 146              	#APP
 147              	# 164 "src/../h/riscv.hpp" 1
 165              	}
 148              		csrw stvec, a5
 149              	# 0 "" 2
 150              	.LVL5:
 151              	#NO_APP
 152              	.LBE7:
 153              	.LBE6:
  30:src/main.cpp  **** 
  31:src/main.cpp  ****     //main thread
  32:src/main.cpp  ****     thread_create((thread_t *)(&Main), nullptr, nullptr);
 154              		.loc 1 32 5 is_stmt 1
 155              		.loc 1 32 18 is_stmt 0
 156 009c 97040000 		lla	s1,.LANCHOR0
 156      93840400 
 157 00a4 13060000 		li	a2,0
 158 00a8 93050000 		li	a1,0
 159 00ac 13850400 		mv	a0,s1
 160 00b0 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
 160      E7800000 
 161              	.LVL6:
  33:src/main.cpp  ****     TCB::running = Main;
 162              		.loc 1 33 5 is_stmt 1
 163              		.loc 1 33 18 is_stmt 0
 164 00b8 03B70400 		ld	a4,0(s1)
 165 00bc 97070000 		la	a5,_ZN3TCB7runningE
 165      83B70700 
 166 00c4 23B0E700 		sd	a4,0(a5)
  34:src/main.cpp  ****     //idle thread
  35:src/main.cpp  ****     Thread idle(idleThreadBody, nullptr);
 167              		.loc 1 35 5 is_stmt 1
 168              		.loc 1 35 40 is_stmt 0
 169 00c8 13060000 		li	a2,0
 170 00cc 97050000 		lla	a1,_Z14idleThreadBodyPv
 170      93850500 
 171 00d4 930404FC 		addi	s1,s0,-64
 172 00d8 13850400 		mv	a0,s1
 173 00dc 97000000 		call	_ZN6ThreadC1EPFvPvES0_@plt
 173      E7800000 
 174              	.LVL7:
 175              	.LEHE0:
  36:src/main.cpp  ****     idle.start();
 176              		.loc 1 36 5 is_stmt 1
 177              		.loc 1 36 15 is_stmt 0
 178 00e4 13850400 		mv	a0,s1
 179              	.LEHB1:
 180 00e8 97000000 		call	_ZN6Thread5startEv@plt
GAS LISTING /tmp/ccHs2ZZR.s 			page 8


 180      E7800000 
 181              	.LVL8:
  37:src/main.cpp  **** 
  38:src/main.cpp  ****     thread_create((thread_t *)(&userMainTCB), wrapperUM, nullptr);
 182              		.loc 1 38 5 is_stmt 1
 183              		.loc 1 38 18 is_stmt 0
 184 00f0 13060000 		li	a2,0
 185 00f4 97050000 		lla	a1,_Z9wrapperUMPv
 185      93850500 
 186 00fc 17050000 		lla	a0,.LANCHOR0+8
 186      13050500 
 187 0104 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
 187      E7800000 
 188              	.LVL9:
 189              	.L10:
  39:src/main.cpp  ****     while(!userMainTCB->isFinished()){
 190              		.loc 1 39 5 is_stmt 1
 191              		.loc 1 39 11
 192              		.loc 1 39 35 is_stmt 0
 193 010c 97070000 		ld	a5,.LANCHOR0+8
 193      83B70700 
 194              	.LVL10:
 195              	.LBB8:
 196              	.LBB9:
 197              		.file 4 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by marko on 20.4.22..
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   6:src/../h/tcb.hpp **** #define OS1_VEZBE07_RISCV_CONTEXT_SWITCH_2_INTERRUPT_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** #include "scheduler.hpp"
  10:src/../h/tcb.hpp **** #include "syscall_c.hpp"
  11:src/../h/tcb.hpp **** #include "../test/printing.hpp"
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp **** enum threadNames
  14:src/../h/tcb.hpp **** {
  15:src/../h/tcb.hpp ****     mainThread = 1,
  16:src/../h/tcb.hpp ****     consoleThread = 4,
  17:src/../h/tcb.hpp ****     idleThread = 2,
  18:src/../h/tcb.hpp ****     userMainThread = 3
  19:src/../h/tcb.hpp **** };
  20:src/../h/tcb.hpp **** // Thread Control Block
  21:src/../h/tcb.hpp **** class TCB
  22:src/../h/tcb.hpp **** {
  23:src/../h/tcb.hpp **** public:
  24:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  25:src/../h/tcb.hpp **** 
  26:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 198              		.loc 4 26 31 is_stmt 1
 199              		.loc 4 26 38 is_stmt 0
 200 0114 83C70703 		lbu	a5,48(a5)
 201              	.LVL11:
 202              	.LBE9:
 203              	.LBE8:
GAS LISTING /tmp/ccHs2ZZR.s 			page 9


 204              		.loc 1 39 11
 205 0118 63960702 		bnez	a5,.L9
  40:src/main.cpp  ****         thread_dispatch();
 206              		.loc 1 40 9 is_stmt 1
 207              		.loc 1 40 24 is_stmt 0
 208 011c 97000000 		call	_Z15thread_dispatchv@plt
 208      E7800000 
 209              	.LVL12:
 210              	.LEHE1:
 211 0124 6FF09FFE 		j	.L10
 212              	.L12:
 213 0128 93040500 		mv	s1,a0
  35:src/main.cpp  ****     idle.start();
 214              		.loc 1 35 40
 215 012c 130504FC 		addi	a0,s0,-64
 216 0130 97000000 		call	_ZN6ThreadD1Ev@plt
 216      E7800000 
 217              	.LVL13:
 218 0138 13850400 		mv	a0,s1
 219              	.LEHB2:
 220 013c 97000000 		call	_Unwind_Resume@plt
 220      E7800000 
 221              	.LVL14:
 222              	.LEHE2:
 223              	.L9:
  41:src/main.cpp  ****     }
  42:src/main.cpp  ****     //userMain();
  43:src/main.cpp  ****     //producerConsumer_CPP_Sync_API();
  44:src/main.cpp  **** 
  45:src/main.cpp  ****     quitQuemu();
 224              		.loc 1 45 5 is_stmt 1
 225              		.loc 1 45 14 is_stmt 0
 226 0144 97000000 		call	_Z9quitQuemuv
 226      E7800000 
 227              	.LVL15:
  46:src/main.cpp  ****     return 0;
 228              		.loc 1 46 5 is_stmt 1
  35:src/main.cpp  ****     idle.start();
 229              		.loc 1 35 40 is_stmt 0
 230 014c 130504FC 		addi	a0,s0,-64
 231 0150 97000000 		call	_ZN6ThreadD1Ev@plt
 231      E7800000 
 232              	.LVL16:
  47:src/main.cpp  **** }...
 233              		.loc 1 47 1
 234 0158 13050000 		li	a0,0
 235 015c 83308103 		ld	ra,56(sp)
 236              		.cfi_restore 1
 237 0160 03340103 		ld	s0,48(sp)
 238              		.cfi_restore 8
 239              		.cfi_def_cfa 2, 64
 240 0164 83348102 		ld	s1,40(sp)
 241              		.cfi_restore 9
 242 0168 13010104 		addi	sp,sp,64
 243              		.cfi_def_cfa_offset 0
 244 016c 67800000 		jr	ra
 245              		.cfi_endproc
GAS LISTING /tmp/ccHs2ZZR.s 			page 10


 246              	.LFE49:
 247              		.globl	__gxx_personality_v0
 248              		.section	.gcc_except_table,"a",@progbits
 249              	.LLSDA49:
 250 0000 FF       		.byte	0xff
 251 0001 FF       		.byte	0xff
 252 0002 03       		.byte	0x3
 253 0003 27       		.byte	0x27
 254 0004 00000000 		.4byte	.LEHB0-.LFB49
 255 0008 00000000 		.4byte	.LEHE0-.LEHB0
 256 000c 00000000 		.4byte	0
 257 0010 00       		.byte	0
 258 0011 00000000 		.4byte	.LEHB1-.LFB49
 259 0015 00000000 		.4byte	.LEHE1-.LEHB1
 260 0019 00000000 		.4byte	.L12-.LFB49
 261 001d 00       		.byte	0
 262 001e 00000000 		.4byte	.LEHB2-.LFB49
 263 0022 00000000 		.4byte	.LEHE2-.LEHB2
 264 0026 00000000 		.4byte	0
 265 002a 00       		.byte	0
 266              		.text
 268              		.globl	Main
 269              		.globl	userMainTCB
 270              		.bss
 271              		.align	3
 272              		.set	.LANCHOR0,. + 0
 275              	Main:
 276 0000 00000000 		.zero	8
 276      00000000 
 279              	userMainTCB:
 280 0008 00000000 		.zero	8
 280      00000000 
 281              		.text
 282              	.Letext0:
 283              		.file 5 "src/../lib/hw.h"
 284              		.file 6 "src/../test/../h/syscall_c.hpp"
 285              		.file 7 "src/../h/MemoryAllocator.hpp"
 286              		.file 8 "src/../h/syscall_cpp.hpp"
 2822              		.align	3
 2825              	DW.ref.__gxx_personality_v0:
 2826 0000 00000000 		.dword	__gxx_personality_v0
 2826      00000000 
 2827              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 2828              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccHs2ZZR.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccHs2ZZR.s:9      .text:0000000000000000 _Z14idleThreadBodyPv
     /tmp/ccHs2ZZR.s:13     .text:0000000000000000 .L0 
     /tmp/ccHs2ZZR.s:14     .text:0000000000000000 .L0 
     /tmp/ccHs2ZZR.s:15     .text:0000000000000004 .L0 
     /tmp/ccHs2ZZR.s:18     .text:000000000000000c .L0 
     /tmp/ccHs2ZZR.s:19     .text:000000000000000c .L0 
     /tmp/ccHs2ZZR.s:21     .text:0000000000000010 .L0 
     /tmp/ccHs2ZZR.s:24     .text:0000000000000010 .L0 
     /tmp/ccHs2ZZR.s:25     .text:0000000000000010 .L0 
     /tmp/ccHs2ZZR.s:26     .text:0000000000000010 .L0 
     /tmp/ccHs2ZZR.s:29     .text:0000000000000018 .L0 
     /tmp/ccHs2ZZR.s:30     .text:000000000000001c .L0 
     /tmp/ccHs2ZZR.s:36     .text:000000000000001c _Z9wrapperUMPv
     /tmp/ccHs2ZZR.s:39     .text:000000000000001c .L0 
     /tmp/ccHs2ZZR.s:40     .text:000000000000001c .L0 
     /tmp/ccHs2ZZR.s:41     .text:0000000000000020 .L0 
     /tmp/ccHs2ZZR.s:44     .text:0000000000000028 .L0 
     /tmp/ccHs2ZZR.s:45     .text:0000000000000028 .L0 
     /tmp/ccHs2ZZR.s:47     .text:000000000000002c .L0 
     /tmp/ccHs2ZZR.s:49     .text:000000000000002c .L0 
     /tmp/ccHs2ZZR.s:50     .text:000000000000002c .L0 
     /tmp/ccHs2ZZR.s:53     .text:0000000000000034 .L0 
     /tmp/ccHs2ZZR.s:54     .text:0000000000000038 .L0 
     /tmp/ccHs2ZZR.s:56     .text:000000000000003c .L0 
     /tmp/ccHs2ZZR.s:57     .text:000000000000003c .L0 
     /tmp/ccHs2ZZR.s:59     .text:0000000000000040 .L0 
     /tmp/ccHs2ZZR.s:61     .text:0000000000000044 .L0 
     /tmp/ccHs2ZZR.s:67     .text:0000000000000044 _Z9quitQuemuv
     /tmp/ccHs2ZZR.s:71     .text:0000000000000044 .L0 
     /tmp/ccHs2ZZR.s:72     .text:0000000000000044 .L0 
     /tmp/ccHs2ZZR.s:73     .text:0000000000000048 .L0 
     /tmp/ccHs2ZZR.s:75     .text:000000000000004c .L0 
     /tmp/ccHs2ZZR.s:77     .text:0000000000000050 .L0 
     /tmp/ccHs2ZZR.s:80     .text:0000000000000050 .L0 
     /tmp/ccHs2ZZR.s:81     .text:0000000000000050 .L0 
     /tmp/ccHs2ZZR.s:82     .text:0000000000000050 .L0 
     /tmp/ccHs2ZZR.s:83     .text:0000000000000050 .L0 
     /tmp/ccHs2ZZR.s:89     .text:0000000000000058 .L0 
     /tmp/ccHs2ZZR.s:91     .text:0000000000000058 .L0 
     /tmp/ccHs2ZZR.s:98     .text:0000000000000064 .L0 
src/../h/quitQuemu.hpp:14     .text:0000000000000064 .L0 
     /tmp/ccHs2ZZR.s:104    .text:0000000000000068 .L0 
     /tmp/ccHs2ZZR.s:105    .text:000000000000006c .L0 
     /tmp/ccHs2ZZR.s:106    .text:000000000000006c .L0 
     /tmp/ccHs2ZZR.s:108    .text:0000000000000070 .L0 
     /tmp/ccHs2ZZR.s:110    .text:0000000000000074 .L0 
     /tmp/ccHs2ZZR.s:116    .text:0000000000000074 main
     /tmp/ccHs2ZZR.s:119    .text:0000000000000074 .L0 
     /tmp/ccHs2ZZR.s:2825   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccHs2ZZR.s:122    .text:0000000000000074 .L0 
     /tmp/ccHs2ZZR.s:123    .text:0000000000000078 .L0 
     /tmp/ccHs2ZZR.s:127    .text:0000000000000084 .L0 
     /tmp/ccHs2ZZR.s:128    .text:0000000000000084 .L0 
     /tmp/ccHs2ZZR.s:129    .text:0000000000000084 .L0 
     /tmp/ccHs2ZZR.s:131    .text:0000000000000088 .L0 
GAS LISTING /tmp/ccHs2ZZR.s 			page 12


     /tmp/ccHs2ZZR.s:134    .text:0000000000000088 .L0 
     /tmp/ccHs2ZZR.s:135    .text:0000000000000088 .L0 
     /tmp/ccHs2ZZR.s:138    .text:0000000000000090 .L0 
     /tmp/ccHs2ZZR.s:139    .text:0000000000000090 .L0 
     /tmp/ccHs2ZZR.s:145    .text:0000000000000098 .L0 
  src/../h/riscv.hpp:164    .text:0000000000000098 .L0 
     /tmp/ccHs2ZZR.s:155    .text:000000000000009c .L0 
     /tmp/ccHs2ZZR.s:156    .text:000000000000009c .L0 
     /tmp/ccHs2ZZR.s:163    .text:00000000000000b8 .L0 
     /tmp/ccHs2ZZR.s:164    .text:00000000000000b8 .L0 
     /tmp/ccHs2ZZR.s:168    .text:00000000000000c8 .L0 
     /tmp/ccHs2ZZR.s:169    .text:00000000000000c8 .L0 
     /tmp/ccHs2ZZR.s:177    .text:00000000000000e4 .L0 
     /tmp/ccHs2ZZR.s:178    .text:00000000000000e4 .L0 
     /tmp/ccHs2ZZR.s:183    .text:00000000000000f0 .L0 
     /tmp/ccHs2ZZR.s:184    .text:00000000000000f0 .L0 
     /tmp/ccHs2ZZR.s:191    .text:000000000000010c .L0 
     /tmp/ccHs2ZZR.s:192    .text:000000000000010c .L0 
     /tmp/ccHs2ZZR.s:193    .text:000000000000010c .L0 
     /tmp/ccHs2ZZR.s:199    .text:0000000000000114 .L0 
     /tmp/ccHs2ZZR.s:200    .text:0000000000000114 .L0 
     /tmp/ccHs2ZZR.s:205    .text:0000000000000118 .L0 
     /tmp/ccHs2ZZR.s:207    .text:000000000000011c .L0 
     /tmp/ccHs2ZZR.s:208    .text:000000000000011c .L0 
     /tmp/ccHs2ZZR.s:215    .text:000000000000012c .L0 
     /tmp/ccHs2ZZR.s:225    .text:0000000000000144 .L0 
     /tmp/ccHs2ZZR.s:226    .text:0000000000000144 .L0 
     /tmp/ccHs2ZZR.s:229    .text:000000000000014c .L0 
     /tmp/ccHs2ZZR.s:230    .text:000000000000014c .L0 
     /tmp/ccHs2ZZR.s:234    .text:0000000000000158 .L0 
     /tmp/ccHs2ZZR.s:236    .text:0000000000000160 .L0 
     /tmp/ccHs2ZZR.s:238    .text:0000000000000164 .L0 
     /tmp/ccHs2ZZR.s:239    .text:0000000000000164 .L0 
     /tmp/ccHs2ZZR.s:241    .text:0000000000000168 .L0 
     /tmp/ccHs2ZZR.s:243    .text:000000000000016c .L0 
     /tmp/ccHs2ZZR.s:245    .text:0000000000000170 .L0 
     /tmp/ccHs2ZZR.s:275    .bss:0000000000000000 Main
     /tmp/ccHs2ZZR.s:279    .bss:0000000000000008 userMainTCB
     /tmp/ccHs2ZZR.s:272    .bss:0000000000000000 .LANCHOR0
     /tmp/ccHs2ZZR.s:287    .text:0000000000000170 .L0 
     /tmp/ccHs2ZZR.s:139    .text:0000000000000090 .L0 
     /tmp/ccHs2ZZR.s:156    .text:000000000000009c .L0 
     /tmp/ccHs2ZZR.s:165    .text:00000000000000bc .L0 
     /tmp/ccHs2ZZR.s:170    .text:00000000000000cc .L0 
     /tmp/ccHs2ZZR.s:185    .text:00000000000000f4 .L0 
     /tmp/ccHs2ZZR.s:186    .text:00000000000000fc .L0 
     /tmp/ccHs2ZZR.s:193    .text:000000000000010c .L0 
     /tmp/ccHs2ZZR.s:22     .text:0000000000000010 .L2
     /tmp/ccHs2ZZR.s:223    .text:0000000000000144 .L9
     /tmp/ccHs2ZZR.s:189    .text:000000000000010c .L10
     /tmp/ccHs2ZZR.s:133    .text:0000000000000088 .LEHB0
     /tmp/ccHs2ZZR.s:117    .text:0000000000000074 .LFB49
     /tmp/ccHs2ZZR.s:175    .text:00000000000000e4 .LEHE0
     /tmp/ccHs2ZZR.s:179    .text:00000000000000e8 .LEHB1
     /tmp/ccHs2ZZR.s:210    .text:0000000000000124 .LEHE1
     /tmp/ccHs2ZZR.s:212    .text:0000000000000128 .L12
     /tmp/ccHs2ZZR.s:219    .text:000000000000013c .LEHB2
GAS LISTING /tmp/ccHs2ZZR.s 			page 13


     /tmp/ccHs2ZZR.s:222    .text:0000000000000144 .LEHE2
     /tmp/ccHs2ZZR.s:1511   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccHs2ZZR.s:2745   .debug_str:00000000000007f1 .LASF155
     /tmp/ccHs2ZZR.s:2543   .debug_str:0000000000000239 .LASF156
     /tmp/ccHs2ZZR.s:2669   .debug_str:0000000000000621 .LASF157
     /tmp/ccHs2ZZR.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccHs2ZZR.s:282    .text:0000000000000170 .Letext0
     /tmp/ccHs2ZZR.s:2471   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccHs2ZZR.s:2679   .debug_str:000000000000067d .LASF3
     /tmp/ccHs2ZZR.s:2579   .debug_str:000000000000034a .LASF0
     /tmp/ccHs2ZZR.s:2601   .debug_str:00000000000003fd .LASF1
     /tmp/ccHs2ZZR.s:2693   .debug_str:00000000000006b7 .LASF2
     /tmp/ccHs2ZZR.s:2555   .debug_str:0000000000000271 .LASF4
     /tmp/ccHs2ZZR.s:2701   .debug_str:00000000000006f4 .LASF5
     /tmp/ccHs2ZZR.s:2587   .debug_str:000000000000037e .LASF6
     /tmp/ccHs2ZZR.s:2481   .debug_str:0000000000000043 .LASF7
     /tmp/ccHs2ZZR.s:2657   .debug_str:00000000000005ab .LASF8
     /tmp/ccHs2ZZR.s:2595   .debug_str:00000000000003cd .LASF9
     /tmp/ccHs2ZZR.s:2553   .debug_str:0000000000000261 .LASF10
     /tmp/ccHs2ZZR.s:2563   .debug_str:00000000000002c1 .LASF11
     /tmp/ccHs2ZZR.s:2507   .debug_str:0000000000000112 .LASF12
     /tmp/ccHs2ZZR.s:2541   .debug_str:000000000000022a .LASF13
     /tmp/ccHs2ZZR.s:2517   .debug_str:0000000000000157 .LASF14
     /tmp/ccHs2ZZR.s:2505   .debug_str:0000000000000102 .LASF15
     /tmp/ccHs2ZZR.s:2729   .debug_str:00000000000007a2 .LASF16
     /tmp/ccHs2ZZR.s:2531   .debug_str:00000000000001b5 .LASF17
     /tmp/ccHs2ZZR.s:2723   .debug_str:0000000000000778 .LASF18
     /tmp/ccHs2ZZR.s:2773   .debug_str:00000000000009af .LASF19
     /tmp/ccHs2ZZR.s:2493   .debug_str:00000000000000a9 .LASF158
     /tmp/ccHs2ZZR.s:2777   .debug_str:00000000000009c2 .LASF74
     /tmp/ccHs2ZZR.s:2479   .debug_str:000000000000003d .LASF20
     /tmp/ccHs2ZZR.s:2759   .debug_str:000000000000090d .LASF22
     /tmp/ccHs2ZZR.s:2569   .debug_str:00000000000002f9 .LASF21
     /tmp/ccHs2ZZR.s:2573   .debug_str:0000000000000316 .LASF23
     /tmp/ccHs2ZZR.s:2763   .debug_str:0000000000000937 .LASF24
     /tmp/ccHs2ZZR.s:2757   .debug_str:00000000000008f8 .LASF26
     /tmp/ccHs2ZZR.s:2689   .debug_str:00000000000006a3 .LASF28
     /tmp/ccHs2ZZR.s:2647   .debug_str:0000000000000566 .LASF30
     /tmp/ccHs2ZZR.s:2671   .debug_str:000000000000063f .LASF25
     /tmp/ccHs2ZZR.s:2673   .debug_str:0000000000000646 .LASF27
     /tmp/ccHs2ZZR.s:2641   .debug_str:0000000000000543 .LASF29
     /tmp/ccHs2ZZR.s:2597   .debug_str:00000000000003e0 .LASF31
     /tmp/ccHs2ZZR.s:2793   .debug_str:0000000000000a03 .LASF32
     /tmp/ccHs2ZZR.s:2747   .debug_str:00000000000008b5 .LASF33
     /tmp/ccHs2ZZR.s:2637   .debug_str:000000000000052f .LASF34
     /tmp/ccHs2ZZR.s:2645   .debug_str:0000000000000552 .LASF35
     /tmp/ccHs2ZZR.s:2611   .debug_str:000000000000044f .LASF36
     /tmp/ccHs2ZZR.s:2675   .debug_str:0000000000000659 .LASF37
     /tmp/ccHs2ZZR.s:2815   .debug_str:0000000000000a8d .LASF38
     /tmp/ccHs2ZZR.s:2585   .debug_str:000000000000036a .LASF39
     /tmp/ccHs2ZZR.s:2725   .debug_str:000000000000078e .LASF40
     /tmp/ccHs2ZZR.s:2705   .debug_str:0000000000000700 .LASF41
     /tmp/ccHs2ZZR.s:2707   .debug_str:0000000000000713 .LASF42
     /tmp/ccHs2ZZR.s:2511   .debug_str:0000000000000126 .LASF43
     /tmp/ccHs2ZZR.s:2527   .debug_str:00000000000001a8 .LASF44
     /tmp/ccHs2ZZR.s:2571   .debug_str:0000000000000304 .LASF45
     /tmp/ccHs2ZZR.s:2583   .debug_str:0000000000000364 .LASF46
GAS LISTING /tmp/ccHs2ZZR.s 			page 14


     /tmp/ccHs2ZZR.s:2523   .debug_str:000000000000018d .LASF47
     /tmp/ccHs2ZZR.s:2483   .debug_str:000000000000004a .LASF48
     /tmp/ccHs2ZZR.s:2699   .debug_str:00000000000006dc .LASF49
     /tmp/ccHs2ZZR.s:2691   .debug_str:00000000000006ac .LASF50
     /tmp/ccHs2ZZR.s:2811   .debug_str:0000000000000a68 .LASF51
     /tmp/ccHs2ZZR.s:2779   .debug_str:00000000000009c8 .LASF52
     /tmp/ccHs2ZZR.s:2799   .debug_str:0000000000000a1c .LASF53
     /tmp/ccHs2ZZR.s:2775   .debug_str:00000000000009b8 .LASF54
     /tmp/ccHs2ZZR.s:2627   .debug_str:00000000000004d2 .LASF55
     /tmp/ccHs2ZZR.s:2789   .debug_str:00000000000009e6 .LASF56
     /tmp/ccHs2ZZR.s:2561   .debug_str:00000000000002a5 .LASF57
     /tmp/ccHs2ZZR.s:2709   .debug_str:000000000000071a .LASF58
     /tmp/ccHs2ZZR.s:2533   .debug_str:00000000000001cb .LASF59
     /tmp/ccHs2ZZR.s:2581   .debug_str:0000000000000357 .LASF60
     /tmp/ccHs2ZZR.s:2771   .debug_str:0000000000000995 .LASF61
     /tmp/ccHs2ZZR.s:2781   .debug_str:00000000000009d2 .LASF62
     /tmp/ccHs2ZZR.s:2653   .debug_str:000000000000058a .LASF63
     /tmp/ccHs2ZZR.s:2783   .debug_str:00000000000009d7 .LASF64
     /tmp/ccHs2ZZR.s:2589   .debug_str:0000000000000390 .LASF65
     /tmp/ccHs2ZZR.s:2785   .debug_str:00000000000009dc .LASF66
     /tmp/ccHs2ZZR.s:2501   .debug_str:00000000000000dc .LASF67
     /tmp/ccHs2ZZR.s:2787   .debug_str:00000000000009e1 .LASF68
     /tmp/ccHs2ZZR.s:2817   .debug_str:0000000000000a95 .LASF69
     /tmp/ccHs2ZZR.s:2649   .debug_str:000000000000057b .LASF70
     /tmp/ccHs2ZZR.s:2751   .debug_str:00000000000008d3 .LASF71
     /tmp/ccHs2ZZR.s:2719   .debug_str:0000000000000757 .LASF72
     /tmp/ccHs2ZZR.s:2617   .debug_str:0000000000000482 .LASF73
     /tmp/ccHs2ZZR.s:2661   .debug_str:00000000000005c9 .LASF128
     /tmp/ccHs2ZZR.s:2593   .debug_str:00000000000003ab .LASF130
     /tmp/ccHs2ZZR.s:2655   .debug_str:000000000000059b .LASF75
     /tmp/ccHs2ZZR.s:2683   .debug_str:0000000000000687 .LASF159
     /tmp/ccHs2ZZR.s:2621   .debug_str:00000000000004aa .LASF76
     /tmp/ccHs2ZZR.s:2509   .debug_str:0000000000000121 .LASF77
     /tmp/ccHs2ZZR.s:2491   .debug_str:00000000000000a4 .LASF78
     /tmp/ccHs2ZZR.s:2629   .debug_str:00000000000004e8 .LASF79
     /tmp/ccHs2ZZR.s:2485   .debug_str:0000000000000055 .LASF81
     /tmp/ccHs2ZZR.s:2735   .debug_str:00000000000007c5 .LASF80
     /tmp/ccHs2ZZR.s:2631   .debug_str:00000000000004f2 .LASF82
     /tmp/ccHs2ZZR.s:2651   .debug_str:0000000000000580 .LASF83
     /tmp/ccHs2ZZR.s:2559   .debug_str:0000000000000284 .LASF84
     /tmp/ccHs2ZZR.s:2801   .debug_str:0000000000000a32 .LASF85
     /tmp/ccHs2ZZR.s:2659   .debug_str:00000000000005be .LASF86
     /tmp/ccHs2ZZR.s:2489   .debug_str:000000000000008b .LASF87
     /tmp/ccHs2ZZR.s:2513   .debug_str:0000000000000139 .LASF160
     /tmp/ccHs2ZZR.s:2663   .debug_str:00000000000005de .LASF161
     /tmp/ccHs2ZZR.s:2643   .debug_str:000000000000054a .LASF162
     /tmp/ccHs2ZZR.s:2703   .debug_str:00000000000006fb .LASF88
     /tmp/ccHs2ZZR.s:2753   .debug_str:00000000000008e4 .LASF89
     /tmp/ccHs2ZZR.s:2737   .debug_str:00000000000007ce .LASF92
     /tmp/ccHs2ZZR.s:2635   .debug_str:0000000000000518 .LASF94
     /tmp/ccHs2ZZR.s:2497   .debug_str:00000000000000c2 .LASF90
     /tmp/ccHs2ZZR.s:2535   .debug_str:00000000000001e6 .LASF91
     /tmp/ccHs2ZZR.s:2697   .debug_str:00000000000006d2 .LASF93
     /tmp/ccHs2ZZR.s:2503   .debug_str:00000000000000ed .LASF95
     /tmp/ccHs2ZZR.s:2739   .debug_str:00000000000007d9 .LASF96
     /tmp/ccHs2ZZR.s:2537   .debug_str:00000000000001fd .LASF97
     /tmp/ccHs2ZZR.s:2795   .debug_str:0000000000000a0b .LASF98
GAS LISTING /tmp/ccHs2ZZR.s 			page 15


     /tmp/ccHs2ZZR.s:2495   .debug_str:00000000000000b1 .LASF99
     /tmp/ccHs2ZZR.s:2607   .debug_str:0000000000000429 .LASF100
     /tmp/ccHs2ZZR.s:2769   .debug_str:000000000000097c .LASF101
     /tmp/ccHs2ZZR.s:2727   .debug_str:0000000000000795 .LASF102
     /tmp/ccHs2ZZR.s:2565   .debug_str:00000000000002cf .LASF103
     /tmp/ccHs2ZZR.s:2685   .debug_str:000000000000068e .LASF163
     /tmp/ccHs2ZZR.s:2713   .debug_str:0000000000000739 .LASF104
     /tmp/ccHs2ZZR.s:2767   .debug_str:0000000000000955 .LASF105
     /tmp/ccHs2ZZR.s:2623   .debug_str:00000000000004b6 .LASF106
     /tmp/ccHs2ZZR.s:2539   .debug_str:0000000000000213 .LASF107
     /tmp/ccHs2ZZR.s:2603   .debug_str:0000000000000410 .LASF108
     /tmp/ccHs2ZZR.s:2687   .debug_str:0000000000000693 .LASF109
     /tmp/ccHs2ZZR.s:2743   .debug_str:00000000000007e9 .LASF110
     /tmp/ccHs2ZZR.s:2813   .debug_str:0000000000000a80 .LASF111
     /tmp/ccHs2ZZR.s:2557   .debug_str:0000000000000278 .LASF112
     /tmp/ccHs2ZZR.s:2625   .debug_str:00000000000004c2 .LASF113
     /tmp/ccHs2ZZR.s:2551   .debug_str:0000000000000255 .LASF114
     /tmp/ccHs2ZZR.s:2475   .debug_str:0000000000000005 .LASF115
     /tmp/ccHs2ZZR.s:2619   .debug_str:000000000000049d .LASF116
     /tmp/ccHs2ZZR.s:2721   .debug_str:0000000000000765 .LASF117
     /tmp/ccHs2ZZR.s:2695   .debug_str:00000000000006c5 .LASF118
     /tmp/ccHs2ZZR.s:2525   .debug_str:000000000000019f .LASF119
     /tmp/ccHs2ZZR.s:2515   .debug_str:0000000000000144 .LASF120
     /tmp/ccHs2ZZR.s:2761   .debug_str:000000000000091f .LASF164
     /tmp/ccHs2ZZR.s:2473   .debug_str:0000000000000000 .LASF121
     /tmp/ccHs2ZZR.s:2807   .debug_str:0000000000000a53 .LASF122
     /tmp/ccHs2ZZR.s:2755   .debug_str:00000000000008f0 .LASF123
     /tmp/ccHs2ZZR.s:2749   .debug_str:00000000000008c9 .LASF124
     /tmp/ccHs2ZZR.s:2733   .debug_str:00000000000007bc .LASF125
     /tmp/ccHs2ZZR.s:2665   .debug_str:000000000000060f .LASF126
     /tmp/ccHs2ZZR.s:2715   .debug_str:0000000000000746 .LASF127
     /tmp/ccHs2ZZR.s:2499   .debug_str:00000000000000ce .LASF129
     /tmp/ccHs2ZZR.s:2609   .debug_str:0000000000000436 .LASF131
     /tmp/ccHs2ZZR.s:2519   .debug_str:0000000000000167 .LASF165
     /tmp/ccHs2ZZR.s:2477   .debug_str:0000000000000015 .LASF166
     /tmp/ccHs2ZZR.s:2711   .debug_str:0000000000000728 .LASF132
     /tmp/ccHs2ZZR.s:2797   .debug_str:0000000000000a11 .LASF167
     /tmp/ccHs2ZZR.s:2681   .debug_str:0000000000000682 .LASF133
     /tmp/ccHs2ZZR.s:2741   .debug_str:00000000000007e4 .LASF134
     /tmp/ccHs2ZZR.s:2639   .debug_str:0000000000000537 .LASF135
     /tmp/ccHs2ZZR.s:2633   .debug_str:0000000000000513 .LASF136
     /tmp/ccHs2ZZR.s:2549   .debug_str:0000000000000250 .LASF137
     /tmp/ccHs2ZZR.s:246    .text:0000000000000170 .LFE49
     /tmp/ccHs2ZZR.s:2545   .debug_str:0000000000000246 .LASF138
     /tmp/ccHs2ZZR.s:141    .text:0000000000000098 .LBB6
     /tmp/ccHs2ZZR.s:153    .text:000000000000009c .LBE6
     /tmp/ccHs2ZZR.s:195    .text:0000000000000114 .LBB8
     /tmp/ccHs2ZZR.s:203    .text:0000000000000118 .LBE8
     /tmp/ccHs2ZZR.s:2451   .debug_loc:0000000000000000 .LLST0
     /tmp/ccHs2ZZR.s:136    .text:0000000000000090 .LVL3
     /tmp/ccHs2ZZR.s:161    .text:00000000000000b8 .LVL6
     /tmp/ccHs2ZZR.s:174    .text:00000000000000e4 .LVL7
     /tmp/ccHs2ZZR.s:181    .text:00000000000000f0 .LVL8
     /tmp/ccHs2ZZR.s:188    .text:000000000000010c .LVL9
     /tmp/ccHs2ZZR.s:209    .text:0000000000000124 .LVL12
     /tmp/ccHs2ZZR.s:217    .text:0000000000000138 .LVL13
     /tmp/ccHs2ZZR.s:221    .text:0000000000000144 .LVL14
GAS LISTING /tmp/ccHs2ZZR.s 			page 16


     /tmp/ccHs2ZZR.s:227    .text:000000000000014c .LVL15
     /tmp/ccHs2ZZR.s:232    .text:0000000000000158 .LVL16
     /tmp/ccHs2ZZR.s:2567   .debug_str:00000000000002f2 .LASF168
     /tmp/ccHs2ZZR.s:2605   .debug_str:0000000000000416 .LASF147
     /tmp/ccHs2ZZR.s:2805   .debug_str:0000000000000a4d .LASF149
     /tmp/ccHs2ZZR.s:2599   .debug_str:00000000000003f3 .LASF139
     /tmp/ccHs2ZZR.s:2575   .debug_str:000000000000032e .LASF140
     /tmp/ccHs2ZZR.s:37     .text:000000000000001c .LFB48
     /tmp/ccHs2ZZR.s:62     .text:0000000000000044 .LFE48
     /tmp/ccHs2ZZR.s:51     .text:0000000000000034 .LVL1
     /tmp/ccHs2ZZR.s:2809   .debug_str:0000000000000a59 .LASF141
     /tmp/ccHs2ZZR.s:2765   .debug_str:0000000000000940 .LASF142
     /tmp/ccHs2ZZR.s:10     .text:0000000000000000 .LFB47
     /tmp/ccHs2ZZR.s:31     .text:000000000000001c .LFE47
     /tmp/ccHs2ZZR.s:27     .text:0000000000000018 .LVL0
     /tmp/ccHs2ZZR.s:2547   .debug_str:000000000000024b .LASF169
     /tmp/ccHs2ZZR.s:2613   .debug_str:0000000000000457 .LASF170
     /tmp/ccHs2ZZR.s:2591   .debug_str:00000000000003a1 .LASF143
     /tmp/ccHs2ZZR.s:2731   .debug_str:00000000000007ae .LASF144
     /tmp/ccHs2ZZR.s:68     .text:0000000000000044 .LFB0
     /tmp/ccHs2ZZR.s:111    .text:0000000000000074 .LFE0
     /tmp/ccHs2ZZR.s:2529   .debug_str:00000000000001ae .LASF145
     /tmp/ccHs2ZZR.s:2667   .debug_str:0000000000000617 .LASF146
     /tmp/ccHs2ZZR.s:2615   .debug_str:000000000000045d .LASF148
     /tmp/ccHs2ZZR.s:2791   .debug_str:00000000000009f5 .LASF150
     /tmp/ccHs2ZZR.s:2487   .debug_str:0000000000000076 .LASF151
     /tmp/ccHs2ZZR.s:2677   .debug_str:000000000000066d .LASF152
     /tmp/ccHs2ZZR.s:2803   .debug_str:0000000000000a3e .LASF171
     /tmp/ccHs2ZZR.s:2521   .debug_str:0000000000000175 .LASF172
     /tmp/ccHs2ZZR.s:2577   .debug_str:000000000000033d .LASF153
     /tmp/ccHs2ZZR.s:2717   .debug_str:000000000000074e .LASF154
     /tmp/ccHs2ZZR.s:194    .text:0000000000000114 .LVL10
     /tmp/ccHs2ZZR.s:201    .text:0000000000000118 .LVL11
     /tmp/ccHs2ZZR.s:288    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccHs2ZZR.s:249    .gcc_except_table:0000000000000000 .LLSDA49

UNDEFINED SYMBOLS
_Z15thread_dispatchv
_Z8userMainv
_ZN15MemoryAllocator9initilazeEv
_ZN5Riscv14supervisorTrapEv
_Z13thread_createPP7_threadPFvPvES2_
_ZN3TCB7runningE
_ZN6ThreadC1EPFvPvES0_
_ZN6Thread5startEv
_ZN6ThreadD1Ev
_Unwind_Resume
__gxx_personality_v0
